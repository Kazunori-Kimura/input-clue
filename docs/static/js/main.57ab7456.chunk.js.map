{"version":3,"sources":["utils/dictionary.worker.js","actions/index.js","reducers/translate.js","reducers/dictionary.js","reducers/index.js","sagas/dictionary.js","utils/database.js","sagas/translate.js","sagas/index.js","commons/index.js","components/Header.js","components/TextArea.js","components/Keybutton.js","components/Keyboard.js","components/FunctionKeys.js","components/Loading.js","components/DictionarySearchBar.js","components/Row.js","components/DictionarySearchPanel.js","containers/AppContainer.js","NoContent.js","App.js","commons/i18n.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","LOAD_DICTIONARY","LOAD_DICTIONARY_START","LOAD_DICTIONARY_SUCCEEDED","LOAD_DICTIONARY_FAILED","RESET_DICTIONARY_STATUS","TRANSLATE_WORD","TRANSLATE_WORD_START","TRANSLATE_WORD_SUCCEEDED","TRANSLATE_WORD_FAILED","CLEAR_TRANSLATE_LIST","translateWord","payload","type","translateWordStart","translateWordSucceeded","translateWordFailed","clearTranslateList","loadDictionary","loadDictionaryStart","loadDictionarySucceeded","loadDictionaryFailed","resetDictionaryStatus","initialState","list","requesting","error","translate","state","arguments","length","undefined","action","Object","objectSpread","succeeded","dictionary","reducer","combineReducers","runWorkerAsync","_ref","uri","lang","Promise","resolve","reject","worker","onmessage","evt","data","status","postMessage","_action$payload","regenerator_default","a","wrap","_context","prev","next","put","concat","call","t0","stop","_marked","this","sagas","takeLatest","Database","classCallCheck","db","isOpen","request","_this","transaction","objectStore","get","onerror","onsuccess","value","result","modified","parseInt","err","_this2","oncomplete","ev","indexedDB","open","_this3","target","handleError","onupgradeneeded","storeName","createObjectStore","autoIncrement","createIndex","unique","keyPath","items","_this4","store","i","add","search","nextWord","slice","String","fromCharCode","charCodeAt","range","IDBKeyRange","bound","_this5","index","openCursor","cursor","push","continue","Error","searchWord","_callee","word","_context2","openAsync","getWordsAsync","sent","abrupt","translate_marked","rootSaga","all","toConsumableArray","dictionarySagas","translateSagas","sagas_marked","languages","thai","keycode","thai_pho","pinyin","vietnam","mongolian","fontFamily","lao","lao_ext","myanmar","myanmar_basic","pashto","assamese","sanskrit","bengali","kmer","tamil","sinhala","napali","hindi","syrian","turkish","turkish_pho","hangary","english_pho","cyrillic","russian","suomi","french_pho","interfaceLanguages","Header","anchor","menu","handleChangeInterfaceLanguage","event","i18n","props","currentTarget","getAttribute","changeLanguage","localStorage","setItem","setState","handleCloseMenu","handleOpenMenu","name","getItem","_this$props","t","classes","language","_this$state","react_default","createElement","className","nav","Button_default","onClick","color","Menu_default","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","keys","map","MenuItem_default","key","menuItem","component","Link","to","_this$props2","_this$state2","_this$props3","AppBar_default","position","Toolbar_default","Typography_default","variant","title","renderKeyboardLanguageMenu","renderInterfaceLanguageMenu","Component","withNamespaces","withStyles","textDecoration","flex","display","flexDirection","justifyContent","alignItems","TextArea","input","message","prevCaret","compareCaret","nextCaret","prevStart","start","prevEnd","end","prevDirection","direction","nextStart","nextEnd","nextDirection","getCaret","onChangeCaret","selectionStart","selectionEnd","selectionDirection","focus","setCaret","options","setTimeout","setSelectionRange","setInputRef","forEach","addEventListener","handleCopy","caret","select","document","execCommand","clearMessage","handleClear","onChangeValue","handleChange","e","nextProps","container","FormControl_default","content","Input_default","textArea","autoFocus","fullWidth","rows","multiline","inputRef","onChange","FormHelperText_default","buttons","Tooltip_default","IconButton_default","aria-label","Clear_default","fontSize","FileCopy_default","defaultProps","theme","width","paddingTop","spacing","unit","margin","lineHeight","BASE_FONTS","Keybutton","handleClick","code","getCharFromCode","params","filter","c","reverse","apply","char","style","backgroundColor","minWidth","padding","textTransform","Keyboard","fetchKeycode","fetch","then","res","json","handleSpaceKeyClick","renderRow","row","renderKey","_ref$color","_ref$type","_ref$value","components_Keybutton","join","current","onBackspaceClick","topRow","function","Backspace_default","icon","marginRight","WINDOW_TARGET","WINDOW_OPTIONS","FunctionKeys","handleGoogleImageSearch","window","handleGoogleTranslate","encodeURI","handleWeblio","handleTyakusu","handleYouTube","button","top","left","height","indicator","index_es","size","thickness","noWrap","DictionarySearchBar","TextField_default","textField","label","autoComplete","Search_default","Row","hover","cell","kana","mean","DictionarySearchPanel","handleClose","spacer","actions","icons_index_es","item","components_Row","marginBottom","toolbar","AppContainer","handleKeyboardLanguage","history","newState","assign","handleChangeValue","handleChangeCaret","insert","newCaret","before","after","handleKeyboardClick","handleKeyboardBackspaceClick","handleSearchBarChange","handleSearchBarClick","_this$state3","handleSearchResultClick","handleSearchResultClose","match","nextLang","_this$props3$dictiona","_this$state4","Fragment","CssBaseline_default","root","components_Header","appBarSpacer","components_TextArea","components_DictionarySearchBar","components_DictionarySearchPanel","components_FunctionKeys","components_Keyboard","components_Loading","connect","dispatch","bindActionCreators","withRouter","mixins","defineProperty","paddingLeft","paddingRight","overflow","breakpoints","up","marginLeft","NoContent","createMuiTheme","typography","useNextVariants","App","core_styles","HashRouter","Switch","Route","exact","path","render","Redirect","pathname","i18next","use","languageDetector","reactI18nextModule","init","fallbackLng","resources","en","translation","langEn","ja","langJa","interpolation","escapeValue","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","run","saga","ReactDOM","react_redux_es","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.57ab7456.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"3c95b7182919e59580cd.worker.js\");\n};","// --- ACTION_TYPE ---\n/**\n * 辞書の読み込み\n */\nexport const LOAD_DICTIONARY = 'LOAD_DICTIONARY';\nexport const LOAD_DICTIONARY_START = 'LOAD_DICTIONARY_START';\nexport const LOAD_DICTIONARY_SUCCEEDED = 'LOAD_DICTIONARY_SUCCEEDED';\nexport const LOAD_DICTIONARY_FAILED = 'LOAD_DICTIONARY_FAILED';\nexport const RESET_DICTIONARY_STATUS = 'RESET_DICTIONARY_STATUS';\n\n/**\n * 翻訳\n */\nexport const TRANSLATE_WORD = 'TRANSLATE_WORD';\nexport const TRANSLATE_WORD_START = 'TRANSLATE_WORD_START';\nexport const TRANSLATE_WORD_SUCCEEDED = 'TRANSLATE_WORD_SUCCEEDED';\nexport const TRANSLATE_WORD_FAILED = 'TRANSLATE_WORD_FAILED';\nexport const CLEAR_TRANSLATE_LIST = 'CLEAR_TRANSLATE_LIST';\n\n// --- ACTION_CREATOR ---\n\nexport const translateWord = payload => ({\n  type: TRANSLATE_WORD,\n  payload,\n});\n\nexport const translateWordStart = () => ({\n  type: TRANSLATE_WORD_START,\n});\n\nexport const translateWordSucceeded = payload => ({\n  type: TRANSLATE_WORD_SUCCEEDED,\n  payload,\n});\n\nexport const translateWordFailed = payload => ({\n  type: TRANSLATE_WORD_FAILED,\n  payload,\n});\n\nexport const clearTranslateList = () => ({\n  type: CLEAR_TRANSLATE_LIST,\n});\n\nexport const loadDictionary = payload => ({\n  type: LOAD_DICTIONARY,\n  payload,\n});\n\nexport const loadDictionaryStart = () => ({\n  type: LOAD_DICTIONARY_START,\n});\n\nexport const loadDictionarySucceeded = payload => ({\n  type: LOAD_DICTIONARY_SUCCEEDED,\n  payload,\n});\n\nexport const loadDictionaryFailed = payload => ({\n  type: LOAD_DICTIONARY_FAILED,\n  payload,\n});\n\nexport const resetDictionaryStatus = () => ({\n  type: RESET_DICTIONARY_STATUS,\n});\n","import {\n  TRANSLATE_WORD_START, TRANSLATE_WORD_SUCCEEDED, TRANSLATE_WORD_FAILED,\n  CLEAR_TRANSLATE_LIST,\n} from '../actions';\n\nconst initialState = {\n  list: [],\n  requesting: false,\n  error: null,\n};\n\nconst translate = (state = initialState, action) => {\n  switch (action.type) {\n    case TRANSLATE_WORD_START:\n      return {\n        ...state,\n        list: [],\n        requesting: true,\n        error: null,\n      };\n    case TRANSLATE_WORD_SUCCEEDED:\n      return {\n        ...state,\n        list: action.payload.list,\n        requesting: false,\n        error: null,\n      };\n    case TRANSLATE_WORD_FAILED:\n      return {\n        ...state,\n        list: [],\n        requesting: false,\n        error: action.payload.error,\n      };\n    case CLEAR_TRANSLATE_LIST:\n      return {\n        ...initialState,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default translate;\n","// 辞書データ管理\nimport {\n  LOAD_DICTIONARY_START, LOAD_DICTIONARY_SUCCEEDED, LOAD_DICTIONARY_FAILED,\n  RESET_DICTIONARY_STATUS,\n} from '../actions';\n\nconst initialState = {\n  error: null,\n  succeeded: false,\n  requesting: false,\n};\n\nconst dictionary = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DICTIONARY_START:\n      return {\n        ...state,\n        succeeded: false,\n        requesting: true,\n      };\n    case LOAD_DICTIONARY_SUCCEEDED:\n      return {\n        ...state,\n        requesting: false,\n        succeeded: true,\n        error: null,\n      };\n    case LOAD_DICTIONARY_FAILED:\n      return {\n        ...state,\n        error: action.payload.error,\n        succeeded: false,\n        requesting: false,\n      };\n    case RESET_DICTIONARY_STATUS:\n      return initialState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default dictionary;\n","import { combineReducers } from 'redux';\nimport translate from './translate';\nimport dictionary from './dictionary';\n\nconst reducer = combineReducers({\n  translate,\n  dictionary,\n});\n\nexport default reducer;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  loadDictionaryStart, loadDictionarySucceeded, loadDictionaryFailed,\n  LOAD_DICTIONARY,\n} from '../actions';\nimport Worker from 'worker-loader!../utils/dictionary.worker'; // eslint-disable-line\n\n/**\n * WebWorkerを実行する\n * @async\n * @param {Object} param\n * @param {String} param.uri 辞書ファイルのパス\n * @param {String} param.lang 言語\n */\nfunction runWorkerAsync({ uri, lang }) {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker();\n\n    // WebWorkerのメッセージ受信処理\n    worker.onmessage = (evt) => {\n      const { data } = evt;\n      if (data.status === 'ok') {\n        resolve();\n      } else {\n        reject({ error: data.error });\n      }\n    };\n\n    // WebWorkerへのメッセージ送信\n    worker.postMessage({ uri, lang });\n  });\n}\n\n/**\n * 辞書ファイルの読み込み処理\n * @param {*} action \n */\nfunction* loadDictionary(action) {\n  try {\n    // 辞書読み込み開始\n    yield put(loadDictionaryStart());\n\n    const { dictionary, lang } = action.payload;\n    const uri = `./dictionary/${dictionary}`;\n    // workerを実行する\n    yield call(runWorkerAsync, { uri, lang });\n\n    // 成功\n    yield put(loadDictionarySucceeded());\n  } catch (err) {\n    // 失敗\n    yield put(loadDictionaryFailed({ error: err }));\n  }\n}\n\nconst sagas = [\n  takeLatest(LOAD_DICTIONARY, loadDictionary),\n];\n\nexport default sagas;\n","const DATABASE_NAME = 'dictionary'; // database名\nconst VERSION = 1;\nconst STORE_WORDS = 'words';\nconst STORE_FILES = 'files';\n\n/**\n * IndexedDBのラッパークラス\n */\nclass Database {\n  constructor() {\n    this.db = null;\n    this.isOpen = false;\n  }\n\n  /**\n   * 更新日時を取得\n   * @param {string} lang \n   */\n  async getModifiedAsync(lang) {\n    return new Promise((resolve, reject) => {\n      const request = this.db.transaction([STORE_FILES])\n        .objectStore(STORE_FILES)\n        .get(lang);\n      \n      request.onerror = (evt) => {\n        reject(evt);\n      };\n\n      request.onsuccess = () => {\n        let value = 0;\n        try {\n          if (request.result.modified) {\n            value = parseInt(request.result.modified, 10);\n          }\n        } catch (err) {\n          // console.warn(err);\n        }\n        resolve(value);\n      };\n    });\n  }\n\n  /**\n   * 更新日時の更新\n   * @param {string} lang \n   * @param {number} modified \n   */\n  async setModifiedAsync(lang, modified) {\n    new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([STORE_FILES], 'readwrite');\n      // すべて完了\n      transaction.oncomplete = () => {\n        resolve();\n      };\n      // エラー\n      transaction.onerror = (ev) => {\n        reject(ev);\n      };\n\n      // 登録処理\n      const store = transaction.objectStore(STORE_FILES);\n      store.put({ lang, modified });\n    });\n  }\n\n  /**\n   * IndexedDBを開く\n   * @param {string} lang 言語\n   */\n  async openAsync(lang) {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(DATABASE_NAME, VERSION);\n      // error\n      request.onerror = (ev) => {\n        // console.error(ev);\n        this.isOpen = false;\n        reject(ev);\n      };\n\n      // success\n      request.onsuccess = (ev) => {\n        this.db = ev.target.result;\n        // エラーハンドラ\n        this.db.onerror = this.handleError;\n        // openフラグ\n        this.isOpen = true;\n\n        resolve();\n      };\n\n      // upgradeneeded\n      // objectStoreの作成が完了するとonsuccessが呼ばれる\n      request.onupgradeneeded = (ev) => {\n        this.db = ev.target.result;\n        // objectStoreの作成\n        const storeName = `${STORE_WORDS}-${lang}`;\n        const objectStore = this.db.createObjectStore(storeName, { autoIncrement: true });\n        // kanaにindexを作成する (重複可能)\n        objectStore.createIndex('kana', 'kana', { unique: false });\n\n        // 最終更新日時を格納するobjectStore\n        this.db.createObjectStore(STORE_FILES, { keyPath: 'lang' });\n      };\n    });\n  }\n\n  /**\n   * 単語登録\n   * @param {string} lang 言語\n   * @param {object} items { kana, word, mean }\n   */\n  async addAsync(lang, items) {\n    new Promise((resolve, reject) => {\n      const storeName = `${STORE_WORDS}-${lang}`;\n      const transaction = this.db.transaction([storeName], 'readwrite');\n\n      // すべて完了\n      transaction.oncomplete = () => {\n        resolve();\n      };\n      // エラー\n      transaction.onerror = (ev) => {\n        reject(ev);\n      };\n\n      const store = transaction.objectStore(storeName);\n      for (let i = 0; i < items.length; i += 1) {\n        store.add(items[i]);\n      }\n    });\n  }\n\n  /**\n   * 単語を取得 (前方一致検索)\n   * @param {string} lang\n   * @param {string} search\n   */\n  async getWordsAsync(lang, search) {\n    return new Promise((resolve, reject) => {\n      const storeName = `${STORE_WORDS}-${lang}`;\n      // 返却する配列\n      const list = [];\n\n      // rangeを作成\n      const nextWord = search.slice(0, -1)\n        + String.fromCharCode(search.slice(-1).charCodeAt() + 1);\n      // console.log('range:', search, nextWord);\n      const range = IDBKeyRange.bound(search, nextWord, false, true);\n\n      // 検索処理\n      const request = this.db.transaction([storeName])\n        .objectStore(storeName)\n        .index('kana')\n        .openCursor(range);\n      \n      request.onerror = (evt) => {\n        reject(evt);\n      };\n\n      request.onsuccess = () => {\n        const cursor = request.result;\n        if (cursor) {\n          list.push(cursor.value);\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n    });\n  }\n\n  handleError(ev) {\n    // console.error(ev);\n    throw new Error(`database error. ${ev}`);\n  }\n}\n\nexport default Database;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  translateWordStart, translateWordSucceeded, translateWordFailed,\n  TRANSLATE_WORD,\n} from '../actions';\nimport Database from '../utils/database';\n\n/**\n * 単語検索\n * @async\n * @param {Object} payload\n * @param {String} payload.lang 言語\n * @param {String} payload.word 単語\n */\nasync function searchWord({ lang, word }) {\n  const db = new Database();\n  await db.openAsync(lang);\n  const list = await db.getWordsAsync(lang, word);\n  return list;\n}\n\n/**\n * 検索処理\n * @param {*} action \n */\nfunction* translate(action) {\n  try {\n    // 開始\n    yield put(translateWordStart());\n\n    // 検索処理\n    const list = yield call(searchWord, action.payload);\n\n    // 成功\n    yield put(translateWordSucceeded({ list }));\n  } catch (err) {\n    // 失敗\n    yield put(translateWordFailed({ error: err }));\n  }\n}\n\nconst sagas = [\n  takeLatest(TRANSLATE_WORD, translate),\n];\n\nexport default sagas;\n","import { all } from 'redux-saga/effects';\nimport dictionarySagas from './dictionary';\nimport translateSagas from './translate';\n\nexport default function* rootSaga() {\n  yield all([\n    ...dictionarySagas,\n    ...translateSagas,\n  ]);\n}\n","\nexport const version = '1.0.0';\n\n/**\n * キーボードの言語定義\n */\nexport const languages = {\n  // タイ語\n  thai: {\n    dictionary: 'PdicThai-JP-092U.xlsx', // 辞書ファイル\n    keycode: 'thai.json', // 文字コード定義ファイル\n  },\n  // 韓国語\n  // korean: {\n  //   dictionary: '', // 辞書ファイル\n  //   keycode: '', // 文字コード定義ファイル\n  // },\n  // タイ語&発音記号\n  thai_pho: {\n    keycode: 'thai_pho.json',\n  },\n  // 中国語ピンイン\n  pinyin: {\n    keycode: 'pinyin.json',\n  },\n  // ベトナム語\n  vietnam: {\n    keycode: 'vietnam.json',\n  },\n  // 古モンゴル語\n  mongolian: {\n    keycode: 'mongolian.json',\n    fontFamily: 'Mongolian Baiti',\n  },\n  // ラオス語\n  lao: {\n    keycode: 'lao.json',\n  },\n  // ラオス語 拡張版\n  lao_ext: {\n    keycode: 'lao.json',\n  },\n  // ミャンマー語\n  myanmar: {\n    keycode: 'myanmar.json',\n    fontFamily: 'Padauk',\n  },\n  // ミャンマー語・標準\n  myanmar_basic: {\n    keycode: 'myanmar_basic.json',\n    fontFamily: 'Padauk',\n  },\n  // パシュトゥ語（アフガニスタン）\n  pashto: {\n    keycode: 'pashto.json',\n  },\n  // アッサム語\n  assamese: {\n    keycode: 'assamese.json',\n  },\n  // サンスクリット語\n  sanskrit: {\n    keycode: 'sanskrit.json',\n  },\n  // ベンガル語\n  bengali: {\n    keycode: 'bengali.json',\n  },\n  // クメール・カンボジア語\n  kmer: {\n    keycode: 'kmer.json',\n  },\n  // タミル語\n  tamil: {\n    keycode: 'tamil.json',\n  },\n  // シンハラ語\n  sinhala: {\n    keycode: 'sinhala.json',\n  },\n  // ネパール語\n  napali: {\n    keycode: 'napali.json',\n  },\n  // ヒンディー語\n  hindi: {\n    keycode: 'hindi.json',\n  },\n  // シリア語\n  syrian: {\n    keycode: 'syrian.json',\n    fontFamily: 'Estragelo Edessa',\n  },\n  // トルコ語\n  turkish: {\n    keycode: 'turkish.json',\n  },\n  // トルコ語発音記号\n  turkish_pho: {\n    keycode: 'turkish_pho.json',\n  },\n  // ハンガリー語\n  hangary: {\n    keycode: 'hangary.json',\n  },\n  // 英語発音記号\n  english_pho: {\n    keycode: 'english_pho.json',\n  },\n  // モンゴルキリル\n  cyrillic: {\n    keycode: 'cyrillic.json',\n  },\n  // ロシア語\n  russian: {\n    keycode: 'russian.json',\n  },\n  // スオミ語\n  suomi: {\n    keycode: 'suomi.json',\n  },\n  // フランス語＆IPA\n  french_pho: {\n    keycode: 'french_pho.json',\n  },\n};\n\n/**\n * インターフェイスの言語定義\n */\nexport const interfaceLanguages = [\n  'ja', // 日本語\n  'en', // 英語\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport { languages, interfaceLanguages } from '../commons';\n\nconst styles = {\n  title: {\n    textDecoration: 'none',\n  },\n  nav: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  menuItem: {\n    textDecoration: 'none',\n  }\n};\n\nclass Header extends Component {\n  state = {\n    lang: 'ja', // インターフェイスの言語\n    anchor: null,\n    menu: '', // 表示中のメニュー\n  };\n\n  componentWillMount() {\n    // インターフェイスの言語を取得する\n    const lang = localStorage.getItem('lang');\n    if (lang) {\n      const { i18n } = this.props;\n      i18n.changeLanguage(lang);\n      this.setState({ lang });\n    }\n  }\n\n  /**\n   * インターフェイスの言語を切り替える\n   */\n  handleChangeInterfaceLanguage = (event) => {\n    const { i18n } = this.props;\n    const target = event.currentTarget;\n\n    // i18nextの言語切替\n    const lang = target.getAttribute('name');\n    i18n.changeLanguage(lang);\n    // localStorageに保持\n    localStorage.setItem('lang', lang);\n    // stateを更新\n    this.setState({ lang });\n\n    // メニューを閉じる\n    this.handleCloseMenu();\n  };\n\n  /**\n   * メニューを開く\n   */\n  handleOpenMenu = (event) => {\n    const target = event.currentTarget;\n\n    this.setState({\n      anchor: target,\n      menu: target.name,\n    });\n  };\n\n  /**\n   * メニューを閉じる\n   */\n  handleCloseMenu = () => {\n    this.setState({\n      anchor: null,\n      menu: '',\n    });\n  };\n\n  /**\n   * キーボードの言語選択メニュー\n   */\n  renderKeyboardLanguageMenu() {\n    const { t, classes, language } = this.props;\n    const { anchor, menu } = this.state;\n\n    return (\n      <div className={classes.nav}>\n        <Button\n          name=\"keyboard\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {t(`languages.${language}`)}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-keyboard\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'keyboard'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            Object.keys(languages).map(lang => (\n              <MenuItem\n                key={`keyboard-${lang}`}\n                className={classes.menuItem}\n                component={Link}\n                to={`/${lang}`}\n                onClick={this.handleCloseMenu}\n              >\n                {t(`languages.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  /**\n   * インターフェイスの言語選択メニュー\n   */\n  renderInterfaceLanguageMenu() {\n    const { t, classes } = this.props;\n    const { anchor, menu, lang } = this.state;\n\n    return (\n      <div>\n        <Button\n          name=\"interface\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {`${t('interface.placeholder')}: ${t(`interface.${lang}`)}`}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-interface\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'interface'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            interfaceLanguages.map(lang => (\n              <MenuItem\n                key={`interface-${lang}`}\n                className={classes.menuItem}\n                name={lang}\n                onClick={this.handleChangeInterfaceLanguage}\n              >\n                {t(`interface.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  render() {\n    const { t, classes } = this.props;\n\n    return (\n      <AppBar\n        position=\"absolute\"\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.title}\n            component={Link}\n            to=\"/\"\n          >\n            {t('app_name')}\n          </Typography>\n          {/* キーボード言語選択 */}\n          {this.renderKeyboardLanguageMenu()}\n          {/* インターフェイス言語選択 */}\n          {this.renderInterfaceLanguageMenu()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  language: PropTypes.string.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(Header));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: theme.spacing.unit,\n  },\n  content: {\n    flex: 1,\n    margin: theme.spacing.unit,\n  },\n  textArea: {\n    fontSize: 20,\n    lineHeight: 1.4,\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n});\n\nclass TextArea extends Component {\n  state = {\n    input: null,\n    message: '',\n    prevCaret: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { caret } = nextProps;\n    const { prevCaret } = this.state;\n\n    if (prevCaret && !this.compareCaret(prevCaret, caret)) {\n      this.setCaret(caret);\n    }\n  }\n\n  /**\n   * 2つのカーソルを比較\n   */\n  compareCaret = (prevCaret, nextCaret) => {\n    const {\n      start: prevStart,\n      end: prevEnd,\n      direction: prevDirection,\n    } = prevCaret;\n    const {\n      start: nextStart,\n      end: nextEnd,\n      direction: nextDirection,\n    } = nextCaret;\n\n    return prevStart === nextStart &&\n      prevEnd === nextEnd &&\n      prevDirection === nextDirection;\n  };\n\n  /**\n   * カーソル位置を取得する\n   */\n  getCaret = () => {\n    const { input, prevCaret } = this.state;\n    const { onChangeCaret } = this.props;\n    if (input) {\n      const position = {\n        start: input.selectionStart,\n        end: input.selectionEnd,\n        direction: input.selectionDirection,\n      };\n      \n      // 前に取得したcaretとの比較\n      if (prevCaret === null || !this.compareCaret(prevCaret, position)) {\n        // 変化があれば親に通知\n        onChangeCaret(position);\n        this.setState({\n          prevCaret: { ...position },\n        });\n      }\n\n      input.focus();\n      return position;\n    }\n    return null;\n  };\n\n  /**\n   * カーソル位置を変更する\n   */\n  setCaret = (options = { start: 0, end: 0, direction: 'none' }) => {\n    const { start, end, direction } = options;\n    const { input } = this.state;\n    if (input) {\n      setTimeout(() => {\n        input.setSelectionRange(start, end, direction);\n        input.focus();\n      }, 50);\n    }\n  };\n\n  /**\n   * input要素を保持し、イベントを設定する\n   */\n  setInputRef = (input) => {\n    this.setState({\n      input,\n    });\n    ['select', 'focus', 'change', 'click', 'keyup'].forEach(\n      type => input.addEventListener(type, this.getCaret),\n    );\n  };\n\n  /**\n   * テキストのコピー\n   */\n  handleCopy = () => {\n    const { input } = this.state;\n    const { t } = this.props;\n    if (input) {\n      // 現在のカーソル位置\n      const caret = this.getCaret();\n      // 全体を選択してコピー\n      input.select();\n      document.execCommand('copy');\n      // 選択状態を復元\n      input.setSelectionRange(caret.start, caret.end, caret.direction);\n      input.focus();\n\n      this.setState({\n        message: t('message.copy'),\n      });\n      // 3秒後にメッセージ消去\n      setTimeout(this.clearMessage, 5000);\n    }\n  };\n\n  clearMessage = () => {\n    this.setState({\n      message: '',\n    });\n  };\n\n  handleClear = () => {\n    const { input } = this.state;\n    const { onChangeValue, onChangeCaret } = this.props;\n    if (input) {\n      onChangeValue('');\n      onChangeCaret({ start: 0, end: 0, direction: 'none' });\n      this.setCaret();\n    }\n  };\n\n  handleChange = (e) => {\n    const { onChangeValue } = this.props;\n    const value = e.target.value;\n    onChangeValue(value);\n  };\n\n  render() {\n    const { classes, value } = this.props;\n    const { message } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.content}>\n          <Input\n            classes={{\n              input: classes.textArea,\n            }}\n            value={value}\n            autoFocus\n            fullWidth\n            rows={3}\n            multiline\n            inputRef={this.setInputRef}\n            onChange={this.handleChange}\n          />\n          <FormHelperText>\n            {message}\n          </FormHelperText>\n        </FormControl>\n        <div className={classes.buttons}>\n          <Tooltip\n            title=\"Clear\"\n          >\n            <IconButton\n              color=\"secondary\"\n              aria-label=\"Clear\"\n              onClick={this.handleClear}\n            >\n              <ClearIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip\n            title=\"Copy\"\n          >\n            <IconButton\n              aria-label=\"Copy\"\n              onClick={this.handleCopy}\n            >\n              <CopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n}\n\nTextArea.defaultProps = {\n  value: '',\n  caret: {\n    start: 0,\n    end: 0,\n    direction: 'none',\n  },\n};\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  caret: PropTypes.shape(),\n  onChangeValue: PropTypes.func.isRequired,\n  onChangeCaret: PropTypes.func.isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // react-i18next\n  t: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(TextArea));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst BASE_FONTS = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n\nconst styles = () => ({\n  // Button\n  key: {\n    fontSize: '28px',\n    minWidth: '40px',\n    margin: '3px',\n    padding: '3px',\n    textTransform: 'none',\n  },\n});\n\nclass Keybutton extends Component {\n  handleClick = () => {\n    const { code, onClick } = this.props;\n    onClick(this.getCharFromCode(code));\n  }\n\n  getCharFromCode = (code) => {\n    const params = code.filter(c => c !== 0).reverse();\n    return String.fromCharCode(...params);\n  };\n\n  render() {\n    const { code, color, classes, fontFamily } = this.props;\n    // TODO: 韓国語の場合のラベル表示を確認\n    const char = this.getCharFromCode(code);\n\n    return (\n      <Button\n        className={classes.key}\n        variant=\"outlined\"\n        value={char}\n        style={{\n          backgroundColor: color,\n          fontFamily: fontFamily ? `\"${fontFamily}\", ${BASE_FONTS}`: BASE_FONTS\n        }}\n        onClick={this.handleClick}\n      >\n        {char}\n      </Button>\n    );\n  }\n}\n\nKeybutton.defaultProps = {\n  color: '#cccccc',\n  fontFamily: '',\n};\n\nKeybutton.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  fontFamily: PropTypes.string,\n  code: PropTypes.arrayOf(PropTypes.number).isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keybutton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Keybutton from './Keybutton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  function: {\n    margin: theme.spacing.unit,\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Keyboard extends Component {\n  state = {\n    keys: [],\n  };\n\n  componentWillMount() {\n    // keycode読み込み\n    const { keycode } = this.props;\n    this.fetchKeycode(keycode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { keycode: current } = this.props;\n    const { keycode: next } = nextProps;\n\n    if (current !== next) {\n      this.fetchKeycode(next);\n    }\n  }\n\n  fetchKeycode = (keycode) => {\n    if (keycode) {\n      // JSONをfetchしてstateに保持\n      fetch(`./keycode/${keycode}`)\n        .then(res => res.json())\n        .then(data => this.setState({ keys: data }));\n        // .catch(err => console.error(err));\n    }\n  }\n\n  handleSpaceKeyClick = () => {\n    const { onClick } = this.props;\n    onClick([0, 0, 0, 32]);\n  };\n\n  renderRow = (row, index) => {\n    const { classes } = this.props;\n    return (\n      <div\n        key={`row_${index}`}\n        className={classes.row}\n      >\n        {row.map(this.renderKey)}\n      </div>\n    );\n  };\n\n  renderKey = ({ code, color = '#cccccc', type = 'button', value = '' }, index) => {\n    const { onClick, fontFamily } = this.props;\n\n    if (type === 'hr') {\n      return (\n        <hr\n          key={`hr_${index}`}\n          style={{ width: '100%' }}\n        />\n      );\n    }\n    if (type === 'label') {\n      return (\n        <span key={`label_${index}`}>\n          {value}\n        </span>\n      );\n    }\n\n    return (\n      <Keybutton\n        key={`button_${code.join('')}_${index}`}\n        fontFamily={fontFamily}\n        code={code}\n        color={color}\n        onClick={onClick}\n      />\n    );\n  };\n\n  render() {\n    const { classes, onBackspaceClick } = this.props;\n    const { keys } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.topRow}>\n          {/* Space */}\n          <Button\n            className={classes.function}\n            style={{ flex: 3 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={this.handleSpaceKeyClick}\n          >\n            Space\n          </Button>\n          {/* Backspace */}\n          <Button\n            className={classes.function}\n            style={{ flex: 1 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={onBackspaceClick}\n          >\n            <BackspaceIcon\n              fontSize=\"small\"\n              className={classes.icon}\n            />\n            Backspace\n          </Button>\n        </div>\n        {keys.map(this.renderRow)}\n      </div>\n    );\n  }\n}\n\nKeyboard.defaultProps = {\n  fontFamily: '',\n};\n\nKeyboard.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  keycode: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onBackspaceClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keyboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  button: {\n    flex: 1,\n    margin: theme.spacing.unit,\n  },\n});\n\nconst WINDOW_TARGET = '_blank';\nconst WINDOW_OPTIONS = 'menubar=0,width=700,height=600,top=100,left=100';\n\nclass FunctionKeys extends Component {\n  shouldComponentUpdate() {\n    // 描画の更新不要\n    return false;\n  }\n\n  handleGoogleImageSearch = () => {\n    const { value } = this.props;\n    const uri = `https://www.google.co.jp/search?q=${value}&hl=ja&source=lnms&tbm=isch&sa=X&ved=0ahUKEwig9rq7l77ZAhXIE7wKHShXC3YQ_AUICigB&biw=919&bih=604`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleGoogleTranslate = () => {\n    const { value } = this.props;\n    const uri = `https://translate.google.co.jp/?hl=ja#th/ja/${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleWeblio = () => {\n    const { value } = this.props;\n    const uri = `https://tjjt.weblio.jp/content_find/contains/0/${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleTyakusu = () => {\n    const { value } = this.props;\n    const uri = `https://tyakusu.appspot.com/search?q=${value}&action=translate`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleYouTube = () => {\n    const { value } = this.props;\n    const uri = `https://www.youtube.com/results?search_query=${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  render() {\n    const { classes, t } = this.props;\n    return (\n      <div className={classes.container}>\n        {/* 画像検索 */}\n        <Button\n          className={classes.button}\n          onClick={this.handleGoogleImageSearch}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.image')}\n        </Button>\n        {/* Google翻訳 */}\n        <Button\n          className={classes.button}\n          onClick={this.handleGoogleTranslate}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.trans')}\n        </Button>\n        {/* Weblio */}\n        <Button\n          className={classes.button}\n          onClick={this.handleWeblio}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.weblio')}\n        </Button>\n        {/* TYakusu */}\n        <Button\n          className={classes.button}\n          onClick={this.handleTyakusu}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.tyakusu')}\n        </Button>\n        {/* YouTube */}\n        <Button\n          className={classes.button}\n          onClick={this.handleYouTube}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.youtube')}\n        </Button>\n      </div>\n    );\n  }\n}\n\nFunctionKeys.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // i18next\n  t: PropTypes.func.isRequired,\n  // component props\n  value: PropTypes.string.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(FunctionKeys));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withNamespaces } from 'react-i18next';\nimport { CircularProgress, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  indicator: {\n    marginRight: theme.spacing.unit * 2,\n  },\n});\n\nconst Loading = ({ t, classes }) => (\n  <div className={classes.container}>\n    <CircularProgress\n      className={classes.indicator}\n      size={50}\n      thickness={5}\n    />\n    <Typography\n      variant=\"h3\"\n      color=\"textSecondary\"\n      noWrap\n    >\n      {t('dictionary.loading')}\n    </Typography>\n  </div>\n);\n\nLoading.propTypes = {\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(Loading));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: theme.spacing.unit,\n  },\n  textField: {\n    flex: 1,\n    marginRight: theme.spacing.unit,\n  },\n  button: {\n    width: '90px',\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\n/**\n * 辞書検索バー\n */\nclass DictionarySearchBar extends Component {\n  handleChange = (e) => {\n    const { onChange } = this.props;\n    const value = e.target.value;\n    onChange(value);\n  };\n\n  handleClick = () => {\n    const { onClick } = this.props;\n    onClick();\n  };\n\n  render() {\n    const { classes, t, value } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <TextField\n          className={classes.textField}\n          id=\"search\"\n          label={t('dictionary.placeholder')}\n          autoComplete=\"off\"\n          value={value}\n          onChange={this.handleChange}\n        />\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          onClick={this.handleClick}\n        >\n          <SearchIcon className={classes.icon} />\n          {t('dictionary.search')}\n        </Button>\n      </div>\n    );\n  }\n}\n\nDictionarySearchBar.defaultProps = {\n  value: '',\n};\n\nDictionarySearchBar.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  // component props\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(DictionarySearchBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TableRow, TableCell } from '@material-ui/core';\n\nconst styles = {\n  cell: {\n    width: '33%',\n  },\n};\n\nclass Row extends Component {\n  handleClick = () => {\n    const { onClick, value } = this.props;\n    onClick(value.word);\n  };\n\n  render() {\n    const { classes, value } = this.props;\n\n    return (\n      <TableRow\n        hover\n        onClick={this.handleClick}\n      >\n        <TableCell className={classes.cell}>\n          {value.kana}\n        </TableCell>\n        <TableCell className={classes.cell}>\n          {value.word}\n        </TableCell>\n        <TableCell className={classes.cell}>\n          {value.mean}\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nRow.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  value: PropTypes.shape().isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Row);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n  Toolbar, Typography, Tooltip, IconButton,\n  Table, TableBody, TableHead, TableRow, TableCell,\n  Paper,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport Row from './Row';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    padding: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n  },\n  toolbar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  title: {\n\n  },\n  spacer: {\n    flex: 1,\n  },\n  actions: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n\nclass DictionarySearchPanel extends Component {\n  handleClick = (word) => {\n    const { onClick } = this.props;\n    onClick(word);\n  };\n\n  handleClose = () => {\n    const { onClose } = this.props;\n    onClose();\n  }\n\n  render() {\n    const { classes, t, list } = this.props;\n    return (\n      <Paper className={classes.container}>\n        {/* ツールバー */}\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n          >\n            {t('dictionary.result')}\n            :\n            {list.length}\n          </Typography>\n          <div className={classes.spacer} />\n          <div className={classes.actions}>\n            <Tooltip\n              title=\"close\"\n            >\n              <IconButton\n                onClick={this.handleClose}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n        {/* 一覧 */}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                {t('dictionary.header.kana')}\n              </TableCell>\n              <TableCell>\n                {t('dictionary.header.word')}\n              </TableCell>\n              <TableCell>\n                {t('dictionary.header.mean')}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.map(item => (\n              <Row\n                key={`${item.kana}`}\n                value={item}\n                onClick={this.handleClick}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nDictionarySearchPanel.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // i18next\n  t: PropTypes.func.isRequired,\n  // component properties\n  list: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(DictionarySearchPanel));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Header from '../components/Header';\nimport TextArea from '../components/TextArea';\nimport Keyboard from '../components/Keyboard';\nimport FunctionKeys from '../components/FunctionKeys';\nimport LoadingIndicator from '../components/Loading';\nimport SearchBar from '../components/DictionarySearchBar';\nimport SearchPanel from '../components/DictionarySearchPanel';\nimport { languages } from '../commons';\nimport * as actions from '../actions';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    width: 'auto',\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n    overflow: 'auto',\n    [theme.breakpoints.up(700 + theme.spacing.unit * 2 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n});\n\nclass AppContainer extends Component {\n  state = {\n    value: '',\n    searchWord: '',\n    caret: {\n      start: 0,\n      end: 0,\n      direction: 'none',\n    },\n    lang: '',\n    keycode: '',\n    fontFamily: '',\n  };\n\n  componentWillMount() {\n    const { match: { params: { lang } }, history } = this.props;\n\n    // キーボードの設定\n    this.handleKeyboardLanguage(lang, history);\n    // 辞書ファイルの読み込み\n    this.loadDictionary(lang);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { match: { params: { lang } }, history } = this.props;\n    const { match: { params: { lang: nextLang } } } = nextProps;\n\n    if (lang !== nextLang) {\n      // キーボードの設定\n      this.handleKeyboardLanguage(nextLang, history);\n      // 辞書ファイルの読み込み\n      this.loadDictionary(nextLang);\n    }\n  }\n\n  /**\n   * キーボード言語の設定\n   * @param {String} lang\n   * @param {*} history\n   */\n  handleKeyboardLanguage = (lang, history) => {\n    // 未定義の言語がURLに指定されていれば NoContent を表示\n    if (typeof languages[lang] === 'undefined') {\n      // Not Found\n      history.push('./nocontent');\n      return;\n    }\n\n    // 選択した言語の設定で上書きする\n    const newState = Object.assign(\n      {\n        lang,\n        keycode: '',\n        fontFamily: '',\n        dictionary: '',\n      },\n      languages[lang],\n    );\n\n    this.setState(newState);\n  };\n\n  /**\n   * 辞書ファイルの読み込み\n   * @param {String} lang\n   */\n  loadDictionary = (lang) => {\n    // 未定義の言語なら無視する\n    if (typeof languages[lang] === 'undefined') {\n      return;\n    }\n\n    // 辞書ファイル名の取得\n    const { dictionary } = languages[lang];\n    const { actions } = this.props;\n    if (dictionary) {\n      // 辞書の読み込み\n      actions.loadDictionary({ lang, dictionary });\n    } else {\n      actions.resetDictionaryStatus();\n    }\n  };\n\n  handleChangeValue = (value) => {\n    this.setState({\n      value,\n    });\n  };\n\n  handleChangeCaret = (caret) => {\n    this.setState({\n      caret: { ...caret },\n    });\n  };\n\n  insert = (char) => {\n    const { value, caret } = this.state;\n    const newCaret = {};\n\n    if (value === '') {\n      this.setState({\n        value: char,\n        caret: {\n          start: char.length,\n          end: char.length,\n          direction: 'none',\n        },\n      });\n      return;\n    }\n\n    const before = value.slice(0, caret.start);\n    const after = value.slice(caret.end);\n    newCaret.start = caret.start + char.length;\n    newCaret.end = caret.start + char.length;\n    newCaret.direction = 'none';\n\n    this.setState({\n      value: `${before}${char}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  handleKeyboardClick = (char) => {\n    this.insert(char);\n  };\n\n  handleKeyboardBackspaceClick = () => {\n    const { value, caret } = this.state;\n    if (value === '') {\n      // 値が空なら何もしない\n      return;\n    }\n\n    if (caret.start === 0 && caret.end === 0) {\n      // 先頭なら何もしない\n      return;\n    }\n\n    let before = '';\n    let after = '';\n    const newCaret = {};\n    if (caret.start === caret.end) {\n      // 未選択の場合はcaretの前1文字を削除\n      before = value.slice(0, caret.start - 1);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start - 1;\n      newCaret.end = caret.start - 1;\n      newCaret.direction = 'none';\n    } else {\n      // 選択範囲を削除\n      before = value.slice(0, caret.start);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start;\n      newCaret.end = caret.start;\n      newCaret.direction = 'none';\n    }\n\n    // stateの更新\n    this.setState({\n      value: `${before}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  /**\n   * 辞書検索ワード\n   */\n  handleSearchBarChange = (value) => {\n    this.setState({\n      searchWord: value,\n    });\n  };\n\n  /**\n   * 辞書検索\n   */\n  handleSearchBarClick = () => {\n    const { lang, searchWord } = this.state;\n    const { actions } = this.props;\n    actions.translateWord({ lang, word: searchWord });\n  };\n\n  /**\n   * 辞書検索結果をクリック\n   */\n  handleSearchResultClick = (word) => {\n    this.insert(word);\n  };\n\n  /**\n   * 辞書検索結果を閉じる\n   */\n  handleSearchResultClose = () => {\n    const { actions } = this.props;\n    actions.clearTranslateList();\n    this.setState({\n      searchWord: '',\n    });\n  };\n\n  render() {\n    const {\n      match: { params: { lang } },\n      classes,\n      dictionary: {\n        requesting,\n        succeeded,\n      },\n      translate: {\n        list,\n      },\n    } = this.props;\n    const {\n      value, caret, keycode, fontFamily, searchWord,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Header language={lang} />\n          <div className={classes.container}>\n            <div className={classes.appBarSpacer} />\n            <TextArea\n              value={value}\n              caret={caret}\n              onChangeValue={this.handleChangeValue}\n              onChangeCaret={this.handleChangeCaret}\n            />\n            {succeeded && (\n              <SearchBar\n                value={searchWord}\n                onChange={this.handleSearchBarChange}\n                onClick={this.handleSearchBarClick}\n              />\n            )}\n            {list.length > 0 && (\n              <SearchPanel\n                list={list}\n                onClick={this.handleSearchResultClick}\n                onClose={this.handleSearchResultClose}\n              />\n            )}\n            {list.length === 0 && (\n              <React.Fragment>\n                <FunctionKeys value={value} />\n                <Keyboard\n                  keycode={keycode}\n                  fontFamily={fontFamily}\n                  onClick={this.handleKeyboardClick}\n                  onBackspaceClick={this.handleKeyboardBackspaceClick}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n        {requesting && <LoadingIndicator />}\n      </React.Fragment>\n    );\n  }\n}\n\nAppContainer.propTypes = {\n  // react-router-dom\n  match: PropTypes.shape().isRequired,\n  history: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // redux\n  actions: PropTypes.shape().isRequired,\n  dictionary: PropTypes.shape().isRequired,\n  translate: PropTypes.shape().isRequired,\n};\n\nconst mapStateToProps = state => ({\n  translate: state.translate,\n  dictionary: state.dictionary,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  withRouter(withStyles(styles)(AppContainer))\n);\n","import React from 'react';\n\nconst NoContent = () => (\n  <div>\n    <h1>No Content.</h1>\n  </div>\n);\n\nexport default NoContent;\n ","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport AppContainer from './containers/AppContainer';\nimport NoContent from './NoContent';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => (<Redirect to={{ pathname: './thai' }} />)} />\n        <Route path=\"/:lang\" component={AppContainer} />\n        <Route exact path=\"/nocontent\" component={NoContent} />\n      </Switch>\n    </Router>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import i18next from 'i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { reactI18nextModule } from 'react-i18next';\n\nimport langEn from './locales/en';\nimport langJa from './locales/ja';\n\nexport default i18next\n  .use(languageDetector)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: 'ja',\n    resources: {\n      en: {\n        translation: langEn,\n      },\n      ja: {\n        translation: langJa,\n      },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport reducer from './reducers';\nimport saga from './sagas';\nimport './index.css';\nimport App from './App';\nimport i18n from './commons/i18n';\n// import * as serviceWorker from './serviceWorker';\n\n// sagaミドルウェアを作成\nconst sagaMiddleware = createSagaMiddleware();\n\n// Storeにマウント\nconst store = createStore(\n  reducer,\n  applyMiddleware(\n    logger,\n    sagaMiddleware\n  )\n);\n\n// sagaを起動\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}