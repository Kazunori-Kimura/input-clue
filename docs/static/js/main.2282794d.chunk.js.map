{"version":3,"sources":["utils/dictionary.worker.js","actions/index.js","reducers/translate.js","reducers/dictionary.js","reducers/index.js","sagas/dictionary.js","utils/database.js","sagas/translate.js","sagas/index.js","commons/index.js","components/Header.js","components/TextArea.js","components/Keybutton.js","components/Keyboard.js","components/KoreanKey.js","components/KoreanKeyboard.js","components/FunctionKeys.js","components/Loading.js","components/DictionarySearchBar.js","components/Row.js","components/DictionarySearchPanel.js","containers/AppContainer.js","NoContent.js","App.js","commons/i18n.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","LOAD_DICTIONARY","LOAD_DICTIONARY_START","LOAD_DICTIONARY_SUCCEEDED","LOAD_DICTIONARY_FAILED","RESET_DICTIONARY_STATUS","TRANSLATE_WORD","TRANSLATE_WORD_START","TRANSLATE_WORD_SUCCEEDED","TRANSLATE_WORD_FAILED","CLEAR_TRANSLATE_LIST","translateWord","payload","type","translateWordStart","translateWordSucceeded","translateWordFailed","clearTranslateList","loadDictionary","loadDictionaryStart","loadDictionarySucceeded","loadDictionaryFailed","resetDictionaryStatus","initialState","list","requesting","error","translate","state","arguments","length","undefined","action","Object","objectSpread","succeeded","dictionary","reducer","combineReducers","runWorkerAsync","_ref","uri","lang","Promise","resolve","reject","worker","onmessage","evt","data","status","postMessage","_action$payload","regenerator_default","a","wrap","_context","prev","next","put","concat","call","t0","stop","_marked","this","sagas","takeLatest","Database","classCallCheck","db","isOpen","request","_this","transaction","objectStore","get","onerror","onsuccess","value","result","modified","parseInt","err","_this2","oncomplete","ev","indexedDB","open","_this3","target","handleError","onupgradeneeded","storeName","createObjectStore","autoIncrement","createIndex","unique","keyPath","items","_this4","store","clear","i","add","search","nextWord","slice","String","fromCharCode","charCodeAt","range","IDBKeyRange","bound","_this5","index","openCursor","cursor","push","continue","_this6","kana","includes","Error","searchWord","_callee","word","_ref$matchType","matchType","_context2","openAsync","searchForwardMatch","sent","searchPartialMatch","abrupt","translate_marked","rootSaga","all","toConsumableArray","dictionarySagas","translateSagas","sagas_marked","languages","thai","keycode","korean","thai_pho","pinyin","vietnam","mongolian","fontFamily","lao","lao_ext","myanmar","myanmar_basic","pashto","assamese","sanskrit","bengali","kmer","tamil","sinhala","napali","hindi","syrian","turkish","turkish_pho","hangary","english_pho","cyrillic","russian","suomi","french_pho","interfaceLanguages","Header","anchor","menu","handleChangeInterfaceLanguage","event","i18n","props","currentTarget","getAttribute","changeLanguage","localStorage","setItem","setState","handleCloseMenu","handleOpenMenu","name","getItem","_this$props","t","classes","language","_this$state","react_default","createElement","className","nav","Button_default","onClick","color","Menu_default","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","keys","map","MenuItem_default","key","menuItem","component","Link","to","_this$props2","_this$state2","_this$props3","AppBar_default","position","Toolbar_default","Typography_default","variant","title","renderKeyboardLanguageMenu","renderInterfaceLanguageMenu","Component","withNamespaces","withStyles","textDecoration","flex","display","flexDirection","justifyContent","alignItems","TextArea","input","message","prevCaret","compareCaret","nextCaret","prevStart","start","prevEnd","end","prevDirection","direction","nextStart","nextEnd","nextDirection","getCaret","onChangeCaret","selectionStart","selectionEnd","selectionDirection","focus","setCaret","options","setTimeout","setSelectionRange","setInputRef","forEach","addEventListener","handleCopy","caret","select","document","execCommand","clearMessage","handleClear","onChangeValue","handleChange","e","nextProps","container","FormControl_default","content","Input_default","textArea","autoFocus","fullWidth","rows","multiline","inputRef","onChange","FormHelperText_default","buttons","Tooltip_default","IconButton_default","aria-label","Clear_default","fontSize","FileCopy_default","defaultProps","theme","width","paddingTop","spacing","unit","margin","lineHeight","BASE_FONTS","Keybutton","handleClick","code","getCharFromCode","params","filter","c","reverse","apply","char","style","backgroundColor","minWidth","padding","textTransform","Keyboard","fetchKeycode","fetch","then","res","json","handleSpaceKeyClick","renderRow","row","renderKey","_ref$color","_ref$type","_ref$value","components_Keybutton","join","current","onBackspaceClick","topRow","function","Backspace_default","icon","marginRight","KoreanKey","labelText","buttonText","active","label","KoreanKeyboard","middle","handleKoreanKeyClick","handleSubmit","getKoreanChar","handleReset","button","some","stateCode","components_KoreanKey","codePoint","submit","reset","height","fontWeight","WINDOW_TARGET","WINDOW_OPTIONS","FunctionKeys","handleGoogleImageSearch","window","handleGoogleTranslate","encodeURI","handleWeblio","handleTyakusu","handleYouTube","top","left","indicator","index_es","size","thickness","noWrap","DictionarySearchBar","handleChangeMatchType","onMatchTypeChange","disabled","FormLabel_default","RadioGroup_default","group","FormControlLabel_default","radio","control","Radio_default","TextField_default","textField","autoComplete","helperText","getMessage","Search_default","paddingRight","Row","hover","cell","classnames","mean","pro","borderRightWidth","borderRightColor","palette","divider","borderRightStyle","&:nth-last-child(1)","borderRight","DictionarySearchPanel","handleClose","spacer","actions","icons_index_es","item","components_Row","marginBottom","toolbar","textAlign","borderTopWidth","borderTopColor","borderTopStyle","AppContainer","handleKeyboardLanguage","history","newState","assign","handleChangeValue","handleChangeCaret","insert","newCaret","before","after","handleKeyboardClick","handleKeyboardBackspaceClick","handleSearchBarChange","handleMatchTypeChange","handleSearchBarClick","_this$state3","handleSearchResultClick","handleSearchResultClose","match","nextLang","_this$props3$dictiona","_this$props3$translat","translating","_this$state4","Fragment","CssBaseline_default","root","components_Header","appBarSpacer","components_TextArea","components_DictionarySearchPanel","components_DictionarySearchBar","components_FunctionKeys","components_Keyboard","components_KoreanKeyboard","components_Loading","connect","dispatch","bindActionCreators","withRouter","mixins","defineProperty","paddingLeft","overflow","breakpoints","up","marginLeft","NoContent","createMuiTheme","typography","useNextVariants","App","core_styles","HashRouter","Switch","Route","exact","path","render","Redirect","pathname","i18next","use","languageDetector","reactI18nextModule","init","fallbackLng","resources","en","translation","langEn","ja","langJa","interpolation","escapeValue","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","run","saga","ReactDOM","react_redux_es","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.2282794d.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"64b8e3629d612e0c4bc0.worker.js\");\n};","// --- ACTION_TYPE ---\n/**\n * 辞書の読み込み\n */\nexport const LOAD_DICTIONARY = 'LOAD_DICTIONARY';\nexport const LOAD_DICTIONARY_START = 'LOAD_DICTIONARY_START';\nexport const LOAD_DICTIONARY_SUCCEEDED = 'LOAD_DICTIONARY_SUCCEEDED';\nexport const LOAD_DICTIONARY_FAILED = 'LOAD_DICTIONARY_FAILED';\nexport const RESET_DICTIONARY_STATUS = 'RESET_DICTIONARY_STATUS';\n\n/**\n * 翻訳\n */\nexport const TRANSLATE_WORD = 'TRANSLATE_WORD';\nexport const TRANSLATE_WORD_START = 'TRANSLATE_WORD_START';\nexport const TRANSLATE_WORD_SUCCEEDED = 'TRANSLATE_WORD_SUCCEEDED';\nexport const TRANSLATE_WORD_FAILED = 'TRANSLATE_WORD_FAILED';\nexport const CLEAR_TRANSLATE_LIST = 'CLEAR_TRANSLATE_LIST';\n\n// --- ACTION_CREATOR ---\n\nexport const translateWord = payload => ({\n  type: TRANSLATE_WORD,\n  payload,\n});\n\nexport const translateWordStart = () => ({\n  type: TRANSLATE_WORD_START,\n});\n\nexport const translateWordSucceeded = payload => ({\n  type: TRANSLATE_WORD_SUCCEEDED,\n  payload,\n});\n\nexport const translateWordFailed = payload => ({\n  type: TRANSLATE_WORD_FAILED,\n  payload,\n});\n\nexport const clearTranslateList = () => ({\n  type: CLEAR_TRANSLATE_LIST,\n});\n\nexport const loadDictionary = payload => ({\n  type: LOAD_DICTIONARY,\n  payload,\n});\n\nexport const loadDictionaryStart = () => ({\n  type: LOAD_DICTIONARY_START,\n});\n\nexport const loadDictionarySucceeded = payload => ({\n  type: LOAD_DICTIONARY_SUCCEEDED,\n  payload,\n});\n\nexport const loadDictionaryFailed = payload => ({\n  type: LOAD_DICTIONARY_FAILED,\n  payload,\n});\n\nexport const resetDictionaryStatus = () => ({\n  type: RESET_DICTIONARY_STATUS,\n});\n","import {\n  TRANSLATE_WORD_START, TRANSLATE_WORD_SUCCEEDED, TRANSLATE_WORD_FAILED,\n  CLEAR_TRANSLATE_LIST,\n} from '../actions';\n\nconst initialState = {\n  list: [],\n  requesting: false,\n  error: null,\n};\n\nconst translate = (state = initialState, action) => {\n  switch (action.type) {\n    case TRANSLATE_WORD_START:\n      return {\n        ...state,\n        list: [],\n        requesting: true,\n        error: null,\n      };\n    case TRANSLATE_WORD_SUCCEEDED:\n      return {\n        ...state,\n        list: action.payload.list,\n        requesting: false,\n        error: null,\n      };\n    case TRANSLATE_WORD_FAILED:\n      return {\n        ...state,\n        list: [],\n        requesting: false,\n        error: action.payload.error,\n      };\n    case CLEAR_TRANSLATE_LIST:\n      return {\n        ...initialState,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default translate;\n","// 辞書データ管理\nimport {\n  LOAD_DICTIONARY_START, LOAD_DICTIONARY_SUCCEEDED, LOAD_DICTIONARY_FAILED,\n  RESET_DICTIONARY_STATUS,\n} from '../actions';\n\nconst initialState = {\n  error: null,\n  succeeded: false,\n  requesting: false,\n};\n\nconst dictionary = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DICTIONARY_START:\n      return {\n        ...state,\n        succeeded: false,\n        requesting: true,\n      };\n    case LOAD_DICTIONARY_SUCCEEDED:\n      return {\n        ...state,\n        requesting: false,\n        succeeded: true,\n        error: null,\n      };\n    case LOAD_DICTIONARY_FAILED:\n      return {\n        ...state,\n        error: action.payload.error,\n        succeeded: false,\n        requesting: false,\n      };\n    case RESET_DICTIONARY_STATUS:\n      return initialState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default dictionary;\n","import { combineReducers } from 'redux';\nimport translate from './translate';\nimport dictionary from './dictionary';\n\nconst reducer = combineReducers({\n  translate,\n  dictionary,\n});\n\nexport default reducer;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  loadDictionaryStart, loadDictionarySucceeded, loadDictionaryFailed,\n  LOAD_DICTIONARY,\n} from '../actions';\nimport Worker from 'worker-loader!../utils/dictionary.worker'; // eslint-disable-line\n\n/**\n * WebWorkerを実行する\n * @async\n * @param {Object} param\n * @param {String} param.uri 辞書ファイルのパス\n * @param {String} param.lang 言語\n */\nfunction runWorkerAsync({ uri, lang }) {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker();\n\n    // WebWorkerのメッセージ受信処理\n    worker.onmessage = (evt) => {\n      const { data } = evt;\n      if (data.status === 'ok') {\n        resolve();\n      } else {\n        reject({ error: data.error });\n      }\n    };\n\n    // WebWorkerへのメッセージ送信\n    worker.postMessage({ uri, lang });\n  });\n}\n\n/**\n * 辞書ファイルの読み込み処理\n * @param {*} action \n */\nfunction* loadDictionary(action) {\n  try {\n    // 辞書読み込み開始\n    yield put(loadDictionaryStart());\n\n    const { dictionary, lang } = action.payload;\n    const uri = `./dictionary/${dictionary}/data.json`;\n    // workerを実行する\n    yield call(runWorkerAsync, { uri, lang });\n\n    // 成功\n    yield put(loadDictionarySucceeded());\n  } catch (err) {\n    // 失敗\n    yield put(loadDictionaryFailed({ error: err }));\n  }\n}\n\nconst sagas = [\n  takeLatest(LOAD_DICTIONARY, loadDictionary),\n];\n\nexport default sagas;\n","const DATABASE_NAME = 'dictionary'; // database名\nconst VERSION = 1;\nconst STORE_WORDS = 'words';\nconst STORE_FILES = 'files';\n\n/**\n * IndexedDBのラッパークラス\n */\nclass Database {\n  constructor() {\n    this.db = null;\n    this.isOpen = false;\n  }\n\n  /**\n   * 更新日時を取得\n   * @param {string} lang \n   */\n  async getModifiedAsync(lang) {\n    return new Promise((resolve, reject) => {\n      const request = this.db.transaction([STORE_FILES])\n        .objectStore(STORE_FILES)\n        .get(lang);\n      \n      request.onerror = (evt) => {\n        reject(evt);\n      };\n\n      request.onsuccess = () => {\n        let value = 0;\n        try {\n          if (request.result.modified) {\n            value = parseInt(request.result.modified, 10);\n          }\n        } catch (err) {\n          // console.warn(err);\n        }\n        resolve(value);\n      };\n    });\n  }\n\n  /**\n   * 更新日時の更新\n   * @param {string} lang \n   * @param {number} modified \n   */\n  async setModifiedAsync(lang, modified) {\n    new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([STORE_FILES], 'readwrite');\n      // すべて完了\n      transaction.oncomplete = () => {\n        resolve();\n      };\n      // エラー\n      transaction.onerror = (ev) => {\n        reject(ev);\n      };\n\n      // 登録処理\n      const store = transaction.objectStore(STORE_FILES);\n      store.put({ lang, modified });\n    });\n  }\n\n  /**\n   * IndexedDBを開く\n   * @param {string} lang 言語\n   */\n  async openAsync(lang) {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(DATABASE_NAME, VERSION);\n      // error\n      request.onerror = (ev) => {\n        // console.error(ev);\n        this.isOpen = false;\n        reject(ev);\n      };\n\n      // success\n      request.onsuccess = (ev) => {\n        this.db = ev.target.result;\n        // エラーハンドラ\n        this.db.onerror = this.handleError;\n        // openフラグ\n        this.isOpen = true;\n\n        resolve();\n      };\n\n      // upgradeneeded\n      // objectStoreの作成が完了するとonsuccessが呼ばれる\n      request.onupgradeneeded = (ev) => {\n        this.db = ev.target.result;\n        // objectStoreの作成\n        const storeName = `${STORE_WORDS}-${lang}`;\n        const objectStore = this.db.createObjectStore(storeName, { autoIncrement: true });\n        // kanaにindexを作成する (重複可能)\n        objectStore.createIndex('kana', 'kana', { unique: false });\n\n        // 最終更新日時を格納するobjectStore\n        this.db.createObjectStore(STORE_FILES, { keyPath: 'lang' });\n      };\n    });\n  }\n\n  /**\n   * 単語登録\n   * @param {string} lang 言語\n   * @param {object} items { kana, word, mean }\n   */\n  async addAsync(lang, items) {\n    new Promise((resolve, reject) => {\n      const storeName = `${STORE_WORDS}-${lang}`;\n      const transaction = this.db.transaction([storeName], 'readwrite');\n\n      // すべて完了\n      transaction.oncomplete = () => {\n        resolve();\n      };\n      // エラー\n      transaction.onerror = (ev) => {\n        reject(ev);\n      };\n\n      const store = transaction.objectStore(storeName);\n      // objectStoreをクリア\n      const request = store.clear();\n      // クリア後に登録処理を実施\n      request.onsuccess = () => {\n        // 登録処理\n        for (let i = 0; i < items.length; i += 1) {\n          store.add(items[i]);\n        }\n      };\n    });\n  }\n\n  /**\n   * 単語を取得 (前方一致 forward match)\n   * @param {string} lang\n   * @param {string} search\n   */\n  async searchForwardMatch(lang, search) {\n    return new Promise((resolve, reject) => {\n      const storeName = `${STORE_WORDS}-${lang}`;\n      // 返却する配列\n      const list = [];\n\n      // rangeを作成\n      const nextWord = search.slice(0, -1)\n        + String.fromCharCode(search.slice(-1).charCodeAt() + 1);\n      // console.log('range:', search, nextWord);\n      const range = IDBKeyRange.bound(search, nextWord, false, true);\n\n      // 検索処理\n      const request = this.db.transaction([storeName])\n        .objectStore(storeName)\n        .index('kana')\n        .openCursor(range);\n      \n      request.onerror = (evt) => {\n        reject(evt);\n      };\n\n      request.onsuccess = () => {\n        const cursor = request.result;\n        if (cursor) {\n          list.push(cursor.value);\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n    });\n  }\n\n  /**\n   * 部分一致検索\n   * @param {string} lang\n   * @param {string} search\n   */\n  async searchPartialMatch(lang, search) {\n    return new Promise((resolve, reject) => {\n      const storeName = `${STORE_WORDS}-${lang}`;\n      // 返却する配列\n      const list = [];\n\n      // 検索処理\n      const request = this.db.transaction([storeName])\n        .objectStore(storeName)\n        .openCursor();\n      \n      request.onerror = (evt) => {\n        reject(evt);\n      };\n\n      request.onsuccess = () => {\n        const cursor = request.result;\n        if (cursor) {\n          if (cursor.value.kana.includes(search)) {\n            list.push(cursor.value);\n          }\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n    });\n  }\n\n  handleError(ev) {\n    // console.error(ev);\n    throw new Error(`database error. ${ev}`);\n  }\n}\n\nexport default Database;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  translateWordStart, translateWordSucceeded, translateWordFailed,\n  TRANSLATE_WORD,\n} from '../actions';\nimport Database from '../utils/database';\n\n/**\n * 単語検索\n * @async\n * @param {Object} payload\n * @param {String} payload.lang 言語\n * @param {String} payload.word 単語\n * @param {String} payload.matchType 検索方法\n */\nasync function searchWord({ lang, word, matchType = 'forward' }) {\n  const db = new Database();\n  await db.openAsync(lang);\n  let list = [];\n  if (matchType === 'forward') {\n    // 前方一致検索\n    list = await db.searchForwardMatch(lang, word);\n  } else {\n    // 部分一致検索\n    list = await db.searchPartialMatch(lang, word);\n  }\n  return list;\n}\n\n/**\n * 検索処理\n * @param {*} action \n */\nfunction* translate(action) {\n  try {\n    // 開始\n    yield put(translateWordStart());\n\n    // 検索処理\n    const list = yield call(searchWord, action.payload);\n\n    // 成功\n    yield put(translateWordSucceeded({ list }));\n  } catch (err) {\n    // 失敗\n    yield put(translateWordFailed({ error: err }));\n  }\n}\n\nconst sagas = [\n  takeLatest(TRANSLATE_WORD, translate),\n];\n\nexport default sagas;\n","import { all } from 'redux-saga/effects';\nimport dictionarySagas from './dictionary';\nimport translateSagas from './translate';\n\nexport default function* rootSaga() {\n  yield all([\n    ...dictionarySagas,\n    ...translateSagas,\n  ]);\n}\n","\nexport const version = '1.0.0';\n\n/**\n * キーボードの言語定義\n */\nexport const languages = {\n  // タイ語\n  thai: {\n    dictionary: 'PdicThai-JP-092U.xlsx', // 辞書ファイル\n    keycode: 'thai.json', // 文字コード定義ファイル\n  },\n  // 韓国語\n  korean: {\n    keycode: 'korean.json',\n  },\n  // タイ語&発音記号\n  thai_pho: {\n    keycode: 'thai_pho.json',\n  },\n  // 中国語ピンイン\n  pinyin: {\n    keycode: 'pinyin.json',\n  },\n  // ベトナム語\n  vietnam: {\n    keycode: 'vietnam.json',\n  },\n  // 古モンゴル語\n  mongolian: {\n    keycode: 'mongolian.json',\n    fontFamily: 'Mongolian Baiti',\n  },\n  // ラオス語\n  lao: {\n    keycode: 'lao.json',\n  },\n  // ラオス語 拡張版\n  lao_ext: {\n    keycode: 'lao.json',\n  },\n  // ミャンマー語\n  myanmar: {\n    keycode: 'myanmar.json',\n    fontFamily: 'Padauk',\n  },\n  // ミャンマー語・標準\n  myanmar_basic: {\n    keycode: 'myanmar_basic.json',\n    fontFamily: 'Padauk',\n  },\n  // パシュトゥ語（アフガニスタン）\n  pashto: {\n    keycode: 'pashto.json',\n  },\n  // アッサム語\n  assamese: {\n    keycode: 'assamese.json',\n  },\n  // サンスクリット語\n  sanskrit: {\n    keycode: 'sanskrit.json',\n  },\n  // ベンガル語\n  bengali: {\n    keycode: 'bengali.json',\n  },\n  // クメール・カンボジア語\n  kmer: {\n    keycode: 'kmer.json',\n  },\n  // タミル語\n  tamil: {\n    keycode: 'tamil.json',\n  },\n  // シンハラ語\n  sinhala: {\n    keycode: 'sinhala.json',\n  },\n  // ネパール語\n  napali: {\n    keycode: 'napali.json',\n  },\n  // ヒンディー語\n  hindi: {\n    keycode: 'hindi.json',\n  },\n  // シリア語\n  syrian: {\n    keycode: 'syrian.json',\n    fontFamily: 'Estragelo Edessa',\n  },\n  // トルコ語\n  turkish: {\n    keycode: 'turkish.json',\n  },\n  // トルコ語発音記号\n  turkish_pho: {\n    keycode: 'turkish_pho.json',\n  },\n  // ハンガリー語\n  hangary: {\n    keycode: 'hangary.json',\n  },\n  // 英語発音記号\n  english_pho: {\n    keycode: 'english_pho.json',\n  },\n  // モンゴルキリル\n  cyrillic: {\n    keycode: 'cyrillic.json',\n  },\n  // ロシア語\n  russian: {\n    keycode: 'russian.json',\n  },\n  // スオミ語\n  suomi: {\n    keycode: 'suomi.json',\n  },\n  // フランス語＆IPA\n  french_pho: {\n    keycode: 'french_pho.json',\n  },\n};\n\n/**\n * インターフェイスの言語定義\n */\nexport const interfaceLanguages = [\n  'ja', // 日本語\n  'en', // 英語\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport { languages, interfaceLanguages } from '../commons';\n\nconst styles = {\n  title: {\n    textDecoration: 'none',\n  },\n  nav: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  menuItem: {\n    textDecoration: 'none',\n  }\n};\n\nclass Header extends Component {\n  state = {\n    lang: 'ja', // インターフェイスの言語\n    anchor: null,\n    menu: '', // 表示中のメニュー\n  };\n\n  componentWillMount() {\n    // インターフェイスの言語を取得する\n    const lang = localStorage.getItem('lang');\n    if (lang) {\n      const { i18n } = this.props;\n      i18n.changeLanguage(lang);\n      this.setState({ lang });\n    }\n  }\n\n  /**\n   * インターフェイスの言語を切り替える\n   */\n  handleChangeInterfaceLanguage = (event) => {\n    const { i18n } = this.props;\n    const target = event.currentTarget;\n\n    // i18nextの言語切替\n    const lang = target.getAttribute('name');\n    i18n.changeLanguage(lang);\n    // localStorageに保持\n    localStorage.setItem('lang', lang);\n    // stateを更新\n    this.setState({ lang });\n\n    // メニューを閉じる\n    this.handleCloseMenu();\n  };\n\n  /**\n   * メニューを開く\n   */\n  handleOpenMenu = (event) => {\n    const target = event.currentTarget;\n\n    this.setState({\n      anchor: target,\n      menu: target.name,\n    });\n  };\n\n  /**\n   * メニューを閉じる\n   */\n  handleCloseMenu = () => {\n    this.setState({\n      anchor: null,\n      menu: '',\n    });\n  };\n\n  /**\n   * キーボードの言語選択メニュー\n   */\n  renderKeyboardLanguageMenu() {\n    const { t, classes, language } = this.props;\n    const { anchor, menu } = this.state;\n\n    return (\n      <div className={classes.nav}>\n        <Button\n          name=\"keyboard\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {t(`languages.${language}`)}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-keyboard\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'keyboard'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            Object.keys(languages).map(lang => (\n              <MenuItem\n                key={`keyboard-${lang}`}\n                className={classes.menuItem}\n                component={Link}\n                to={`/${lang}`}\n                onClick={this.handleCloseMenu}\n              >\n                {t(`languages.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  /**\n   * インターフェイスの言語選択メニュー\n   */\n  renderInterfaceLanguageMenu() {\n    const { t, classes } = this.props;\n    const { anchor, menu, lang } = this.state;\n\n    return (\n      <div>\n        <Button\n          name=\"interface\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {`${t('interface.placeholder')}: ${t(`interface.${lang}`)}`}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-interface\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'interface'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            interfaceLanguages.map(lang => (\n              <MenuItem\n                key={`interface-${lang}`}\n                className={classes.menuItem}\n                name={lang}\n                onClick={this.handleChangeInterfaceLanguage}\n              >\n                {t(`interface.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  render() {\n    const { t, classes } = this.props;\n\n    return (\n      <AppBar\n        position=\"absolute\"\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.title}\n            component={Link}\n            to=\"/\"\n          >\n            {t('app_name')}\n          </Typography>\n          {/* キーボード言語選択 */}\n          {this.renderKeyboardLanguageMenu()}\n          {/* インターフェイス言語選択 */}\n          {this.renderInterfaceLanguageMenu()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  language: PropTypes.string.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(Header));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: theme.spacing.unit,\n  },\n  content: {\n    flex: 1,\n    margin: theme.spacing.unit,\n  },\n  textArea: {\n    fontSize: 20,\n    lineHeight: 1.4,\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n});\n\nclass TextArea extends Component {\n  state = {\n    input: null,\n    message: '',\n    prevCaret: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { caret } = nextProps;\n    const { prevCaret } = this.state;\n\n    if (prevCaret && !this.compareCaret(prevCaret, caret)) {\n      this.setCaret(caret);\n    }\n  }\n\n  /**\n   * 2つのカーソルを比較\n   */\n  compareCaret = (prevCaret, nextCaret) => {\n    const {\n      start: prevStart,\n      end: prevEnd,\n      direction: prevDirection,\n    } = prevCaret;\n    const {\n      start: nextStart,\n      end: nextEnd,\n      direction: nextDirection,\n    } = nextCaret;\n\n    return prevStart === nextStart &&\n      prevEnd === nextEnd &&\n      prevDirection === nextDirection;\n  };\n\n  /**\n   * カーソル位置を取得する\n   */\n  getCaret = () => {\n    const { input, prevCaret } = this.state;\n    const { onChangeCaret } = this.props;\n    if (input) {\n      const position = {\n        start: input.selectionStart,\n        end: input.selectionEnd,\n        direction: input.selectionDirection,\n      };\n      \n      // 前に取得したcaretとの比較\n      if (prevCaret === null || !this.compareCaret(prevCaret, position)) {\n        // 変化があれば親に通知\n        onChangeCaret(position);\n        this.setState({\n          prevCaret: { ...position },\n        });\n      }\n\n      input.focus();\n      return position;\n    }\n    return null;\n  };\n\n  /**\n   * カーソル位置を変更する\n   */\n  setCaret = (options = { start: 0, end: 0, direction: 'none' }) => {\n    const { start, end, direction } = options;\n    const { input } = this.state;\n    if (input) {\n      setTimeout(() => {\n        input.setSelectionRange(start, end, direction);\n        input.focus();\n      }, 50);\n    }\n  };\n\n  /**\n   * input要素を保持し、イベントを設定する\n   */\n  setInputRef = (input) => {\n    this.setState({\n      input,\n    });\n    ['select', 'focus', 'change', 'click', 'keyup'].forEach(\n      type => input.addEventListener(type, this.getCaret),\n    );\n  };\n\n  /**\n   * テキストのコピー\n   */\n  handleCopy = () => {\n    const { input } = this.state;\n    const { t } = this.props;\n    if (input) {\n      // 現在のカーソル位置\n      const caret = this.getCaret();\n      // 全体を選択してコピー\n      input.select();\n      document.execCommand('copy');\n      // 選択状態を復元\n      input.setSelectionRange(caret.start, caret.end, caret.direction);\n      input.focus();\n\n      this.setState({\n        message: t('message.copy'),\n      });\n      // 3秒後にメッセージ消去\n      setTimeout(this.clearMessage, 5000);\n    }\n  };\n\n  clearMessage = () => {\n    this.setState({\n      message: '',\n    });\n  };\n\n  handleClear = () => {\n    const { input } = this.state;\n    const { onChangeValue, onChangeCaret } = this.props;\n    if (input) {\n      onChangeValue('');\n      onChangeCaret({ start: 0, end: 0, direction: 'none' });\n      this.setCaret();\n    }\n  };\n\n  handleChange = (e) => {\n    const { onChangeValue } = this.props;\n    const value = e.target.value;\n    onChangeValue(value);\n  };\n\n  render() {\n    const { classes, value } = this.props;\n    const { message } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.content}>\n          <Input\n            classes={{\n              input: classes.textArea,\n            }}\n            value={value}\n            autoFocus\n            fullWidth\n            rows={3}\n            multiline\n            inputRef={this.setInputRef}\n            onChange={this.handleChange}\n          />\n          <FormHelperText>\n            {message}\n          </FormHelperText>\n        </FormControl>\n        <div className={classes.buttons}>\n          <Tooltip\n            title=\"Clear\"\n          >\n            <IconButton\n              color=\"secondary\"\n              aria-label=\"Clear\"\n              onClick={this.handleClear}\n            >\n              <ClearIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip\n            title=\"Copy\"\n          >\n            <IconButton\n              aria-label=\"Copy\"\n              onClick={this.handleCopy}\n            >\n              <CopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n}\n\nTextArea.defaultProps = {\n  value: '',\n  caret: {\n    start: 0,\n    end: 0,\n    direction: 'none',\n  },\n};\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  caret: PropTypes.shape(),\n  onChangeValue: PropTypes.func.isRequired,\n  onChangeCaret: PropTypes.func.isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // react-i18next\n  t: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(TextArea));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst BASE_FONTS = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n\nconst styles = () => ({\n  // Button\n  key: {\n    fontSize: '28px',\n    minWidth: '40px',\n    margin: '3px',\n    padding: '3px',\n    textTransform: 'none',\n  },\n});\n\nclass Keybutton extends Component {\n  handleClick = () => {\n    const { code, onClick } = this.props;\n    onClick(this.getCharFromCode(code));\n  }\n\n  getCharFromCode = (code) => {\n    const params = code.filter(c => c !== 0).reverse();\n    return String.fromCharCode(...params);\n  };\n\n  render() {\n    const { code, color, classes, fontFamily } = this.props;\n    // TODO: 韓国語の場合のラベル表示を確認\n    const char = this.getCharFromCode(code);\n\n    return (\n      <Button\n        className={classes.key}\n        variant=\"outlined\"\n        value={char}\n        style={{\n          backgroundColor: color,\n          fontFamily: fontFamily ? `\"${fontFamily}\", ${BASE_FONTS}`: BASE_FONTS\n        }}\n        onClick={this.handleClick}\n      >\n        {char}\n      </Button>\n    );\n  }\n}\n\nKeybutton.defaultProps = {\n  color: '#cccccc',\n  fontFamily: '',\n};\n\nKeybutton.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  fontFamily: PropTypes.string,\n  code: PropTypes.arrayOf(PropTypes.number).isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keybutton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Keybutton from './Keybutton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  function: {\n    margin: theme.spacing.unit,\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Keyboard extends Component {\n  state = {\n    keys: [],\n  };\n\n  componentWillMount() {\n    // keycode読み込み\n    const { keycode } = this.props;\n    this.fetchKeycode(keycode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { keycode: current } = this.props;\n    const { keycode: next } = nextProps;\n\n    if (current !== next) {\n      this.fetchKeycode(next);\n    }\n  }\n\n  fetchKeycode = (keycode) => {\n    if (keycode) {\n      // JSONをfetchしてstateに保持\n      fetch(`./keycode/${keycode}`)\n        .then(res => res.json())\n        .then(data => this.setState({ keys: data }));\n        // .catch(err => console.error(err));\n    }\n  }\n\n  handleSpaceKeyClick = () => {\n    const { onClick } = this.props;\n    onClick(' ');\n  };\n\n  renderRow = (row, index) => {\n    const { classes } = this.props;\n    return (\n      <div\n        key={`row_${index}`}\n        className={classes.row}\n      >\n        {row.map(this.renderKey)}\n      </div>\n    );\n  };\n\n  renderKey = ({ code, color = '#cccccc', type = 'button', value = '' }, index) => {\n    const { onClick, fontFamily } = this.props;\n\n    if (type === 'hr') {\n      return (\n        <hr\n          key={`hr_${index}`}\n          style={{ width: '100%' }}\n        />\n      );\n    }\n    if (type === 'label') {\n      return (\n        <span key={`label_${index}`}>\n          {value}\n        </span>\n      );\n    }\n\n    return (\n      <Keybutton\n        key={`button_${code.join('')}_${index}`}\n        fontFamily={fontFamily}\n        code={code}\n        color={color}\n        onClick={onClick}\n      />\n    );\n  };\n\n  render() {\n    const { classes, onBackspaceClick } = this.props;\n    const { keys } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.topRow}>\n          {/* Space */}\n          <Button\n            className={classes.function}\n            style={{ flex: 3 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={this.handleSpaceKeyClick}\n          >\n            Space\n          </Button>\n          {/* Backspace */}\n          <Button\n            className={classes.function}\n            style={{ flex: 1 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={onBackspaceClick}\n          >\n            <BackspaceIcon\n              fontSize=\"small\"\n              className={classes.icon}\n            />\n            Backspace\n          </Button>\n        </div>\n        {keys.map(this.renderRow)}\n      </div>\n    );\n  }\n}\n\nKeyboard.defaultProps = {\n  fontFamily: '',\n};\n\nKeyboard.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  keycode: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onBackspaceClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keyboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst BASE_FONTS = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\nconst ACTIVE_COLOR = '#ff3333';\n\nconst styles = () => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    margin: '3px',\n  },\n  key: {\n    fontSize: '28px',\n    minWidth: '40px',\n    padding: '3px',\n    textTransform: 'none',\n  },\n});\n\nclass KoreanKey extends Component {\n  handleClick = () => {\n    const { code, onClick } = this.props;\n    onClick(code);\n  }\n\n  render() {\n    const {\n      labelText, buttonText, color, classes,\n      fontFamily, active,\n    } = this.props;\n\n    return (\n      <div className={classes.container}>\n        {labelText && (\n          <span className={classes.label}>\n            {labelText}\n          </span>\n        )}\n        <Button\n          className={classes.key}\n          variant=\"outlined\"\n          style={{\n            backgroundColor: active ? ACTIVE_COLOR : color,\n            fontFamily: fontFamily ? `\"${fontFamily}\", ${BASE_FONTS}`: BASE_FONTS,\n          }}\n          onClick={this.handleClick}\n        >\n          {buttonText}\n        </Button>\n      </div>\n    );\n  }\n}\n\nKoreanKey.defaultProps = {\n  color: '#cccccc',\n  fontFamily: '',\n  labelText: null,\n  active: false,\n};\n\nKoreanKey.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  labelText: PropTypes.string,\n  buttonText: PropTypes.string.isRequired,\n  code: PropTypes.shape().isRequired,\n  color: PropTypes.string,\n  fontFamily: PropTypes.string,\n  active: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(KoreanKey);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n// import Keybutton from './Keybutton';\nimport KoreanKey from './KoreanKey';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  function: {\n    margin: theme.spacing.unit,\n  },\n  submit: {\n    width: 140,\n    height: 60,\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit / 2,\n  },\n  reset: {\n    width: 60,\n    height: 60,\n    fontSize: 12,\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass KoreanKeyboard extends Component {\n  state = {\n    keys: [],\n    start: -1,  // 初声\n    middle: -1, // 中声\n    end: 0,    // 終声\n  };\n\n  componentWillMount() {\n    // keycode読み込み\n    const { keycode } = this.props;\n    this.fetchKeycode(keycode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { keycode: current } = this.props;\n    const { keycode: next } = nextProps;\n\n    if (current !== next) {\n      this.fetchKeycode(next);\n    }\n  }\n\n  /**\n   * 初声、中声、終声のコードから文字を取得する\n   */\n  getKoreanChar() {\n    const { start, middle, end } = this.state;\n    if (start < 0 || middle < 0) {\n      return '';\n    }\n    const codePoint = 44032 + (start * 28 * 21) + (middle * 28) + end;\n    return String.fromCharCode(codePoint);\n  }\n\n  fetchKeycode = (keycode) => {\n    if (keycode) {\n      // JSONをfetchしてstateに保持\n      fetch(`./keycode/${keycode}`)\n        .then(res => res.json())\n        .then(data => this.setState({ keys: data }));\n        // .catch(err => console.error(err));\n    }\n  }\n\n  handleSpaceKeyClick = () => {\n    const { onClick } = this.props;\n    onClick(' ');\n  };\n\n  handleKoreanKeyClick = (code) => {\n    this.setState(code);\n  };\n\n  handleSubmit = () => {\n    const { onClick } = this.props;\n    const char = this.getKoreanChar();\n    onClick(char);\n    this.handleReset();\n  };\n\n  handleReset = () => {\n    this.setState({\n      start: -1,\n      middle: -1,\n      end: 0,\n    });\n  };\n\n  renderRow = (row, index) => {\n    const { classes } = this.props;\n    return (\n      <div\n        key={`row_${index}`}\n        className={classes.row}\n      >\n        {row.map(this.renderKey)}\n      </div>\n    );\n  };\n\n  renderKey = ({\n    code,\n    label,\n    button,\n    color = '#cccccc',\n    type = 'button',\n    value = ''\n  }, index) => {\n    const { fontFamily } = this.props;\n\n    if (type === 'hr') {\n      return (\n        <hr\n          key={`hr_${index}`}\n          style={{ width: '100%' }}\n        />\n      );\n    }\n    if (type === 'label') {\n      return (\n        <span key={`label_${index}`}>\n          {value}\n        </span>\n      );\n    }\n\n    // そのボタンが選択状態かどうかを判定\n    const active = Object.keys(code).some((key) => {\n      const { [key]: stateCode } = this.state;\n      return code[key] === stateCode;\n    });\n\n    return (\n      <KoreanKey\n        key={`button_${button}_${index}`}\n        fontFamily={fontFamily}\n        code={code}\n        color={color}\n        labelText={label}\n        buttonText={button}\n        active={active}\n        onClick={this.handleKoreanKeyClick}\n      />\n    );\n  };\n\n  render() {\n    const { classes, onBackspaceClick } = this.props;\n    const { keys } = this.state;\n\n    const char = this.getKoreanChar();\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.topRow}>\n          {/* Space */}\n          <Button\n            className={classes.function}\n            style={{ flex: 2 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={this.handleSpaceKeyClick}\n          >\n            Space\n          </Button>\n          {/* Backspace */}\n          <Button\n            className={classes.function}\n            style={{ flex: 1 }}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={onBackspaceClick}\n          >\n            <BackspaceIcon\n              fontSize=\"small\"\n              className={classes.icon}\n            />\n            Backspace\n          </Button>\n        </div>\n        <div className={classes.topRow}>\n          {/* 韓国語文字決定 */}\n          <Button\n            className={classes.submit}\n            color=\"default\"\n            variant=\"contained\"\n            onClick={this.handleSubmit}\n          >\n            {char}\n          </Button>\n          <Button\n            className={classes.reset}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={this.handleReset}\n          >\n            Reset\n          </Button>\n        </div>\n        {keys.map(this.renderRow)}\n      </div>\n    );\n  }\n}\n\nKoreanKeyboard.defaultProps = {\n  fontFamily: '',\n};\n\nKoreanKeyboard.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  keycode: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onBackspaceClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(KoreanKeyboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  button: {\n    flex: 1,\n    margin: theme.spacing.unit,\n  },\n});\n\nconst WINDOW_TARGET = '_blank';\nconst WINDOW_OPTIONS = 'menubar=0,width=700,height=600,top=100,left=100';\n\nclass FunctionKeys extends Component {\n  shouldComponentUpdate() {\n    // 描画の更新不要\n    return false;\n  }\n\n  handleGoogleImageSearch = () => {\n    const { value } = this.props;\n    const uri = `https://www.google.co.jp/search?q=${value}&hl=ja&source=lnms&tbm=isch&sa=X&ved=0ahUKEwig9rq7l77ZAhXIE7wKHShXC3YQ_AUICigB&biw=919&bih=604`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleGoogleTranslate = () => {\n    const { value } = this.props;\n    const uri = `https://translate.google.co.jp/?hl=ja#th/ja/${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleWeblio = () => {\n    const { value } = this.props;\n    const uri = `https://tjjt.weblio.jp/content_find/contains/0/${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleTyakusu = () => {\n    const { value } = this.props;\n    const uri = `https://tyakusu.appspot.com/search?q=${value}&action=translate`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  handleYouTube = () => {\n    const { value } = this.props;\n    const uri = `https://www.youtube.com/results?search_query=${encodeURI(value)}`;\n    window.open(uri, WINDOW_TARGET, WINDOW_OPTIONS);\n  };\n\n  render() {\n    const { classes, t } = this.props;\n    return (\n      <div className={classes.container}>\n        {/* 画像検索 */}\n        <Button\n          className={classes.button}\n          onClick={this.handleGoogleImageSearch}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.image')}\n        </Button>\n        {/* Google翻訳 */}\n        <Button\n          className={classes.button}\n          onClick={this.handleGoogleTranslate}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.trans')}\n        </Button>\n        {/* Weblio */}\n        <Button\n          className={classes.button}\n          onClick={this.handleWeblio}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.weblio')}\n        </Button>\n        {/* TYakusu */}\n        <Button\n          className={classes.button}\n          onClick={this.handleTyakusu}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.tyakusu')}\n        </Button>\n        {/* YouTube */}\n        <Button\n          className={classes.button}\n          onClick={this.handleYouTube}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {t('functions.youtube')}\n        </Button>\n      </div>\n    );\n  }\n}\n\nFunctionKeys.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // i18next\n  t: PropTypes.func.isRequired,\n  // component props\n  value: PropTypes.string.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(FunctionKeys));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withNamespaces } from 'react-i18next';\nimport { CircularProgress, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  indicator: {\n    marginRight: theme.spacing.unit * 2,\n  },\n});\n\nconst Loading = ({ t, classes }) => (\n  <div className={classes.container}>\n    <CircularProgress\n      className={classes.indicator}\n      size={50}\n      thickness={5}\n    />\n    <Typography\n      variant=\"h3\"\n      color=\"textSecondary\"\n      noWrap\n    >\n      {t('dictionary.loading')}\n    </Typography>\n  </div>\n);\n\nLoading.propTypes = {\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(Loading));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    padding: theme.spacing.unit,\n  },\n  textField: {\n    flex: 1,\n    marginRight: theme.spacing.unit,\n  },\n  button: {\n    width: '90px',\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n  matchType: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  label: {\n    fontSize: '0.8rem',\n    paddingRight: theme.spacing.unit * 2,\n  },\n  group: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  radio: {\n    paddingRight: theme.spacing.unit * 2,\n  },\n  search: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n});\n\n/**\n * 辞書検索バー\n */\nclass DictionarySearchBar extends Component {\n  getMessage() {\n    const { t, requesting } = this.props;\n    if (requesting) {\n      return t('dictionary.requesting');\n    }\n    return '';\n  }\n\n  handleChange = (e) => {\n    const { onChange } = this.props;\n    const value = e.target.value;\n    onChange(value);\n  };\n\n  handleChangeMatchType = (e) => {\n    const { onMatchTypeChange } = this.props;\n    const value = e.target.value;\n    onMatchTypeChange(value);\n  };\n\n  handleClick = () => {\n    const { onClick } = this.props;\n    onClick();\n  };\n\n  render() {\n    const { classes, t, value, matchType, requesting } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl\n          className={classes.matchType}\n          disabled={requesting}\n        >\n          <FormLabel\n            className={classes.label}\n          >\n            {t('dictionary.match.type')}\n          </FormLabel>\n          <RadioGroup\n            className={classes.group}\n            name=\"matchType\"\n            value={matchType}\n            onChange={this.handleChangeMatchType}\n          >\n            <FormControlLabel\n              className={classes.radio}\n              value=\"forward\"\n              label={t('dictionary.match.forward')}\n              control={<Radio color=\"primary\" />}\n            />\n            <FormControlLabel\n              className={classes.radio}\n              value=\"partial\"\n              label={t('dictionary.match.partial')}\n              control={<Radio color=\"primary\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <div className={classes.search}>\n          <TextField\n            className={classes.textField}\n            id=\"search\"\n            label={t('dictionary.placeholder')}\n            autoComplete=\"off\"\n            value={value}\n            disabled={requesting}\n            helperText={this.getMessage()}\n            onChange={this.handleChange}\n          />\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            size=\"small\"\n            disabled={requesting}\n            onClick={this.handleClick}\n          >\n            <SearchIcon className={classes.icon} />\n            {t('dictionary.search')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nDictionarySearchBar.defaultProps = {\n  value: '',\n  requesting: false,\n};\n\nDictionarySearchBar.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  // component props\n  value: PropTypes.string,\n  matchType: PropTypes.string.isRequired,\n  requesting: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onMatchTypeChange: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(DictionarySearchBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TableRow, TableCell } from '@material-ui/core';\n\nconst styles = theme => ({\n  cell: {\n    width: '33%',\n    borderRightWidth: 1,\n    borderRightColor: theme.palette.divider,\n    borderRightStyle: 'solid',\n    '&:nth-last-child(1)': {\n      borderRight: 'none',\n    },\n  },\n  word: {\n    fontSize: 20,\n  },\n});\n\nclass Row extends Component {\n  handleClick = () => {\n    const { onClick, value } = this.props;\n    onClick(value.word);\n  };\n\n  render() {\n    const { classes, value } = this.props;\n\n    return (\n      <TableRow\n        hover\n        onClick={this.handleClick}\n      >\n        <TableCell className={classes.cell}>\n          {value.kana}\n        </TableCell>\n        <TableCell className={classnames([classes.cell, classes.word])}>\n          {value.word}\n        </TableCell>\n        <TableCell className={classes.cell}>\n          {value.mean}\n        </TableCell>\n        <TableCell className={classes.cell}>\n          {value.pro}\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nRow.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  value: PropTypes.shape().isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Row);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n  Toolbar, Typography, Tooltip, IconButton,\n  Table, TableBody, TableHead, TableRow, TableCell,\n  Paper,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport Row from './Row';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    marginBottom: theme.spacing.unit,\n  },\n  toolbar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: theme.spacing.unit,\n  },\n  title: {\n\n  },\n  spacer: {\n    flex: 1,\n  },\n  actions: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  cell: {\n    padding: 0,\n    textAlign: 'center',\n    borderTopWidth: 1,\n    borderTopColor: theme.palette.divider,\n    borderTopStyle: 'solid',\n    borderRightWidth: 1,\n    borderRightColor: theme.palette.divider,\n    borderRightStyle: 'solid',\n    '&:nth-last-child(1)': {\n      borderRight: 'none',\n    },\n  },\n});\n\nclass DictionarySearchPanel extends Component {\n  handleClick = (word) => {\n    const { onClick } = this.props;\n    onClick(word);\n  };\n\n  handleClose = () => {\n    const { onClose } = this.props;\n    onClose();\n  }\n\n  render() {\n    const { classes, t, list } = this.props;\n    return (\n      <Paper className={classes.container}>\n        {/* ツールバー */}\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n          >\n            {t('dictionary.result')}\n            :\n            {list.length}\n          </Typography>\n          <div className={classes.spacer} />\n          <div className={classes.actions}>\n            <Tooltip\n              title=\"close\"\n            >\n              <IconButton\n                onClick={this.handleClose}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n        {/* 一覧 */}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.cell}>\n                {t('dictionary.header.kana')}\n              </TableCell>\n              <TableCell className={classes.cell}>\n                {t('dictionary.header.word')}\n              </TableCell>\n              <TableCell className={classes.cell}>\n                {t('dictionary.header.mean')}\n              </TableCell>\n              <TableCell className={classes.cell}>\n                {t('dictionary.header.pro')}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.map(item => (\n              <Row\n                key={`${item.kana}`}\n                value={item}\n                onClick={this.handleClick}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nDictionarySearchPanel.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // i18next\n  t: PropTypes.func.isRequired,\n  // component properties\n  list: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(DictionarySearchPanel));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Header from '../components/Header';\nimport TextArea from '../components/TextArea';\nimport Keyboard from '../components/Keyboard';\nimport KoreanKeyboard from '../components/KoreanKeyboard';\nimport FunctionKeys from '../components/FunctionKeys';\nimport LoadingIndicator from '../components/Loading';\nimport SearchBar from '../components/DictionarySearchBar';\nimport SearchPanel from '../components/DictionarySearchPanel';\nimport { languages } from '../commons';\nimport * as actions from '../actions';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    width: 'auto',\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n    overflow: 'auto',\n    [theme.breakpoints.up(700 + theme.spacing.unit * 2 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n});\n\nclass AppContainer extends Component {\n  state = {\n    value: '',\n    searchWord: '',\n    matchType: 'forward',\n    caret: {\n      start: 0,\n      end: 0,\n      direction: 'none',\n    },\n    lang: '',\n    keycode: '',\n    fontFamily: '',\n  };\n\n  componentWillMount() {\n    const { match: { params: { lang } }, history } = this.props;\n\n    // キーボードの設定\n    this.handleKeyboardLanguage(lang, history);\n    // 辞書ファイルの読み込み\n    this.loadDictionary(lang);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { match: { params: { lang } }, history } = this.props;\n    const { match: { params: { lang: nextLang } } } = nextProps;\n\n    if (lang !== nextLang) {\n      // キーボードの設定\n      this.handleKeyboardLanguage(nextLang, history);\n      // 辞書ファイルの読み込み\n      this.loadDictionary(nextLang);\n    }\n  }\n\n  /**\n   * キーボード言語の設定\n   * @param {String} lang\n   * @param {*} history\n   */\n  handleKeyboardLanguage = (lang, history) => {\n    // 未定義の言語がURLに指定されていれば NoContent を表示\n    if (typeof languages[lang] === 'undefined') {\n      // Not Found\n      history.push('./nocontent');\n      return;\n    }\n\n    // 選択した言語の設定で上書きする\n    const newState = Object.assign(\n      {\n        lang,\n        keycode: '',\n        fontFamily: '',\n        dictionary: '',\n      },\n      languages[lang],\n    );\n\n    this.setState(newState);\n  };\n\n  /**\n   * 辞書ファイルの読み込み\n   * @param {String} lang\n   */\n  loadDictionary = (lang) => {\n    // 未定義の言語なら無視する\n    if (typeof languages[lang] === 'undefined') {\n      return;\n    }\n\n    // 辞書ファイル名の取得\n    const { dictionary } = languages[lang];\n    const { actions } = this.props;\n    if (dictionary) {\n      // 辞書の読み込み\n      actions.loadDictionary({ lang, dictionary });\n    } else {\n      actions.resetDictionaryStatus();\n    }\n  };\n\n  handleChangeValue = (value) => {\n    this.setState({\n      value,\n    });\n  };\n\n  handleChangeCaret = (caret) => {\n    this.setState({\n      caret: { ...caret },\n    });\n  };\n\n  insert = (char) => {\n    const { value, caret } = this.state;\n    const newCaret = {};\n\n    if (value === '') {\n      this.setState({\n        value: char,\n        caret: {\n          start: char.length,\n          end: char.length,\n          direction: 'none',\n        },\n      });\n      return;\n    }\n\n    const before = value.slice(0, caret.start);\n    const after = value.slice(caret.end);\n    newCaret.start = caret.start + char.length;\n    newCaret.end = caret.start + char.length;\n    newCaret.direction = 'none';\n\n    this.setState({\n      value: `${before}${char}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  handleKeyboardClick = (char) => {\n    this.insert(char);\n  };\n\n  handleKeyboardBackspaceClick = () => {\n    const { value, caret } = this.state;\n    if (value === '') {\n      // 値が空なら何もしない\n      return;\n    }\n\n    if (caret.start === 0 && caret.end === 0) {\n      // 先頭なら何もしない\n      return;\n    }\n\n    let before = '';\n    let after = '';\n    const newCaret = {};\n    if (caret.start === caret.end) {\n      // 未選択の場合はcaretの前1文字を削除\n      before = value.slice(0, caret.start - 1);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start - 1;\n      newCaret.end = caret.start - 1;\n      newCaret.direction = 'none';\n    } else {\n      // 選択範囲を削除\n      before = value.slice(0, caret.start);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start;\n      newCaret.end = caret.start;\n      newCaret.direction = 'none';\n    }\n\n    // stateの更新\n    this.setState({\n      value: `${before}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  /**\n   * 辞書検索ワードの入力\n   */\n  handleSearchBarChange = (value) => {\n    this.setState({\n      searchWord: value,\n    });\n  };\n\n  /**\n   * 検索方法の変更\n   */\n  handleMatchTypeChange = (value) => {\n    this.setState({\n      matchType: value,\n    });\n  };\n\n  /**\n   * 辞書検索\n   */\n  handleSearchBarClick = () => {\n    const { lang, searchWord, matchType } = this.state;\n    const { actions } = this.props;\n    actions.translateWord({ lang, word: searchWord, matchType });\n  };\n\n  /**\n   * 辞書検索結果をクリック\n   */\n  handleSearchResultClick = (word) => {\n    this.insert(word);\n    // 検索結果を閉じる\n    this.handleSearchResultClose();\n  };\n\n  /**\n   * 辞書検索結果を閉じる\n   */\n  handleSearchResultClose = () => {\n    const { actions } = this.props;\n    actions.clearTranslateList();\n    this.setState({\n      searchWord: '',\n    });\n  };\n\n  render() {\n    const {\n      match: { params: { lang } },\n      classes,\n      dictionary: {\n        requesting,\n        succeeded,\n      },\n      translate: {\n        requesting: translating,\n        list,\n      },\n    } = this.props;\n    const {\n      value, caret, keycode, fontFamily,\n      searchWord, matchType,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Header language={lang} />\n          <div className={classes.container}>\n            <div className={classes.appBarSpacer} />\n            <TextArea\n              value={value}\n              caret={caret}\n              onChangeValue={this.handleChangeValue}\n              onChangeCaret={this.handleChangeCaret}\n            />\n            {list.length > 0 && (\n              <SearchPanel\n                list={list}\n                onClick={this.handleSearchResultClick}\n                onClose={this.handleSearchResultClose}\n              />\n            )}\n            {succeeded && (\n              <SearchBar\n                value={searchWord}\n                matchType={matchType}\n                requesting={translating}\n                onChange={this.handleSearchBarChange}\n                onClick={this.handleSearchBarClick}\n                onMatchTypeChange={this.handleMatchTypeChange}\n              />\n            )}\n            {list.length === 0 && (\n              <React.Fragment>\n                <FunctionKeys value={value} />\n                {lang !== 'korean' && (\n                  <Keyboard\n                    keycode={keycode}\n                    fontFamily={fontFamily}\n                    onClick={this.handleKeyboardClick}\n                    onBackspaceClick={this.handleKeyboardBackspaceClick}\n                  />\n                )}\n                {lang === 'korean' && (\n                  <KoreanKeyboard\n                    keycode={keycode}\n                    fontFamily={fontFamily}\n                    onClick={this.handleKeyboardClick}\n                    onBackspaceClick={this.handleKeyboardBackspaceClick}\n                  />\n                )}\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n        {requesting && <LoadingIndicator />}\n      </React.Fragment>\n    );\n  }\n}\n\nAppContainer.propTypes = {\n  // react-router-dom\n  match: PropTypes.shape().isRequired,\n  history: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // redux\n  actions: PropTypes.shape().isRequired,\n  dictionary: PropTypes.shape().isRequired,\n  translate: PropTypes.shape().isRequired,\n};\n\nconst mapStateToProps = state => ({\n  translate: state.translate,\n  dictionary: state.dictionary,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  withRouter(withStyles(styles)(AppContainer))\n);\n","import React from 'react';\n\nconst NoContent = () => (\n  <div>\n    <h1>No Content.</h1>\n  </div>\n);\n\nexport default NoContent;\n ","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport AppContainer from './containers/AppContainer';\nimport NoContent from './NoContent';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => (<Redirect to={{ pathname: './thai' }} />)} />\n        <Route path=\"/:lang\" component={AppContainer} />\n        <Route exact path=\"/nocontent\" component={NoContent} />\n      </Switch>\n    </Router>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import i18next from 'i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { reactI18nextModule } from 'react-i18next';\n\nimport langEn from './locales/en';\nimport langJa from './locales/ja';\n\nexport default i18next\n  .use(languageDetector)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: 'ja',\n    resources: {\n      en: {\n        translation: langEn,\n      },\n      ja: {\n        translation: langJa,\n      },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport reducer from './reducers';\nimport saga from './sagas';\nimport './index.css';\nimport App from './App';\nimport i18n from './commons/i18n';\n// import * as serviceWorker from './serviceWorker';\n\n// sagaミドルウェアを作成\nconst sagaMiddleware = createSagaMiddleware();\n\n// Storeにマウント\nconst store = createStore(\n  reducer,\n  applyMiddleware(\n    logger,\n    sagaMiddleware\n  )\n);\n\n// sagaを起動\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}