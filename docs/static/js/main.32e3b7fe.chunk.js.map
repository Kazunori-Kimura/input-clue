{"version":3,"sources":["commons/index.js","components/Header.js","components/TextArea.js","components/Keybutton.js","components/Keyboard.js","containers/AppContainer.js","NoContent.js","App.js","commons/i18n.js","serviceWorker.js","index.js"],"names":["languages","thai","dictionary","keycode","thai_pho","pinyin","vietnam","lao","interfaceLanguages","Header","state","lang","anchor","menu","handleChangeInterfaceLanguage","event","i18n","_this","props","currentTarget","getAttribute","changeLanguage","localStorage","setItem","setState","handleCloseMenu","handleOpenMenu","target","name","getItem","this","_this2","_this$props","t","classes","language","_this$state","react_default","a","createElement","className","nav","Button_default","onClick","color","concat","Menu_default","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","Object","keys","map","MenuItem_default","key","menuItem","component","Link","to","_this3","_this$props2","_this$state2","_this$props3","AppBar_default","position","Toolbar_default","Typography_default","variant","title","renderKeyboardLanguageMenu","renderInterfaceLanguageMenu","Component","withNamespaces","withStyles","textDecoration","flex","display","flexDirection","justifyContent","alignItems","TextArea","input","message","prevCaret","compareCaret","nextCaret","prevStart","start","prevEnd","end","prevDirection","direction","nextStart","nextEnd","nextDirection","getCaret","onChangeCaret","selectionStart","selectionEnd","selectionDirection","objectSpread","focus","setCaret","options","arguments","length","undefined","setTimeout","setSelectionRange","setInputRef","forEach","type","addEventListener","handleCopy","caret","select","document","execCommand","clearMessage","handleClear","onChangeValue","handleChange","e","value","nextProps","container","FormControl_default","content","Input_default","textArea","autoFocus","fullWidth","rows","multiline","inputRef","onChange","FormHelperText_default","buttons","IconButton_default","aria-label","FileCopy_default","fontSize","Clear_default","defaultProps","theme","width","paddingTop","spacing","unit","margin","lineHeight","Keybutton","handleClick","code","getCharFromCode","params","filter","c","reverse","String","fromCharCode","apply","toConsumableArray","char","style","backgroundColor","minWidth","minHeight","padding","Keyboard","fetchKeycode","fetch","then","res","json","data","catch","err","console","error","handleSpaceKeyClick","renderRow","row","index","renderKey","_ref","_ref$color","_ref$type","_ref$value","components_Keybutton","join","current","next","onBackspaceClick","topRow","function","Backspace_default","icon","marginRight","AppContainer","handleKeyboardLanguage","history","push","handleChangeValue","handleChangeCaret","insert","newCaret","before","slice","after","handleKeyboardClick","handleKeyboardBackspaceClick","match","nextLang","_this$state3","Fragment","CssBaseline_default","root","components_Header","appBarSpacer","components_TextArea","components_Keyboard","withRouter","mixins","toolbar","defineProperty","paddingLeft","paddingRight","overflow","breakpoints","up","marginLeft","NoContent","createMuiTheme","typography","useNextVariants","App","core_styles","BrowserRouter","Switch","Route","exact","path","render","Redirect","pathname","i18next","use","languageDetector","reactI18nextModule","init","fallbackLng","resources","en","translation","langEn","ja","langJa","interpolation","escapeValue","Boolean","window","location","hostname","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32e3b7fe.chunk.js","sourcesContent":["\nexport const version = '1.0.0';\n\n/**\n * キーボードの言語定義\n */\nexport const languages = {\n  // タイ語\n  thai: {\n    dictionary: 'PdicThai-JP-092U.xlsx', // 辞書ファイル\n    keycode: 'thai.json', // 文字コード定義ファイル\n  },\n  // 韓国語\n  // korean: {\n  //   dictionary: '', // 辞書ファイル\n  //   keycode: '', // 文字コード定義ファイル\n  // },\n  // タイ語&発音記号\n  thai_pho: {\n    keycode: 'thai_pho.json',\n  },\n  // 中国語ピンイン\n  pinyin: {\n    keycode: 'pinyin.json',\n  },\n  // ベトナム語\n  vietnam: {\n    keycode: 'vietnam.json',\n  },\n  // ラオス語\n  lao: {\n    keycode: 'lao.json',\n  },\n};\n\n/**\n * インターフェイスの言語定義\n */\nexport const interfaceLanguages = [\n  'ja', // 日本語\n  'en', // 英語\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport { languages, interfaceLanguages } from '../commons';\n\nconst styles = {\n  title: {\n    textDecoration: 'none',\n  },\n  nav: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  menuItem: {\n    textDecoration: 'none',\n  }\n};\n\nclass Header extends Component {\n  state = {\n    lang: 'ja', // インターフェイスの言語\n    anchor: null,\n    menu: '', // 表示中のメニュー\n  };\n\n  componentWillMount() {\n    // インターフェイスの言語を取得する\n    const lang = localStorage.getItem('lang');\n    if (lang) {\n      const { i18n } = this.props;\n      i18n.changeLanguage(lang);\n      this.setState({ lang });\n    }\n  }\n\n  /**\n   * インターフェイスの言語を切り替える\n   */\n  handleChangeInterfaceLanguage = (event) => {\n    const { i18n } = this.props;\n    const target = event.currentTarget;\n\n    // i18nextの言語切替\n    const lang = target.getAttribute('name');\n    i18n.changeLanguage(lang);\n    // localStorageに保持\n    localStorage.setItem('lang', lang);\n    // stateを更新\n    this.setState({ lang });\n\n    // メニューを閉じる\n    this.handleCloseMenu();\n  };\n\n  /**\n   * メニューを開く\n   */\n  handleOpenMenu = (event) => {\n    const target = event.currentTarget;\n\n    this.setState({\n      anchor: target,\n      menu: target.name,\n    });\n  };\n\n  /**\n   * メニューを閉じる\n   */\n  handleCloseMenu = () => {\n    this.setState({\n      anchor: null,\n      menu: '',\n    });\n  };\n\n  /**\n   * キーボードの言語選択メニュー\n   */\n  renderKeyboardLanguageMenu() {\n    const { t, classes, language } = this.props;\n    const { anchor, menu } = this.state;\n\n    return (\n      <div className={classes.nav}>\n        <Button\n          name=\"keyboard\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {t(`languages.${language}`)}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-keyboard\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'keyboard'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            Object.keys(languages).map(lang => (\n              <MenuItem\n                key={`keyboard-${lang}`}\n                className={classes.menuItem}\n                component={Link}\n                to={`/${lang}`}\n                onClick={this.handleCloseMenu}\n              >\n                {t(`languages.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  /**\n   * インターフェイスの言語選択メニュー\n   */\n  renderInterfaceLanguageMenu() {\n    const { t, classes } = this.props;\n    const { anchor, menu, lang } = this.state;\n\n    return (\n      <div>\n        <Button\n          name=\"interface\"\n          onClick={this.handleOpenMenu}\n          color=\"inherit\"\n        >\n          {`${t('interface.placeholder')}: ${t(`interface.${lang}`)}`}\n        </Button>\n        {/* メニュー */}\n        <Menu\n          id=\"menu-interface\"\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={menu === 'interface'}\n          onClose={this.handleCloseMenu}\n        >\n          {\n            interfaceLanguages.map(lang => (\n              <MenuItem\n                key={`interface-${lang}`}\n                className={classes.menuItem}\n                name={lang}\n                onClick={this.handleChangeInterfaceLanguage}\n              >\n                {t(`interface.${lang}`)}\n              </MenuItem>\n            ))\n          }\n        </Menu>\n      </div>\n    );\n  }\n\n  render() {\n    const { t, classes } = this.props;\n\n    return (\n      <AppBar\n        position=\"absolute\"\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.title}\n            component={Link}\n            to=\"/\"\n          >\n            {t('app_name')}\n          </Typography>\n          {/* キーボード言語選択 */}\n          {this.renderKeyboardLanguageMenu()}\n          {/* インターフェイス言語選択 */}\n          {this.renderInterfaceLanguageMenu()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  // react-i18next\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  language: PropTypes.string.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(Header));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: theme.spacing.unit,\n  },\n  content: {\n    flex: 1,\n    margin: theme.spacing.unit,\n  },\n  textArea: {\n    fontSize: 20,\n    lineHeight: 1.4,\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nclass TextArea extends Component {\n  state = {\n    input: null,\n    message: '',\n    prevCaret: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { caret } = nextProps;\n    const { prevCaret } = this.state;\n\n    if (prevCaret && !this.compareCaret(prevCaret, caret)) {\n      this.setCaret(caret);\n    }\n  }\n\n  /**\n   * 2つのカーソルを比較\n   */\n  compareCaret = (prevCaret, nextCaret) => {\n    const {\n      start: prevStart,\n      end: prevEnd,\n      direction: prevDirection,\n    } = prevCaret;\n    const {\n      start: nextStart,\n      end: nextEnd,\n      direction: nextDirection,\n    } = nextCaret;\n\n    return prevStart === nextStart &&\n      prevEnd === nextEnd &&\n      prevDirection === nextDirection;\n  };\n\n  /**\n   * カーソル位置を取得する\n   */\n  getCaret = () => {\n    const { input, prevCaret } = this.state;\n    const { onChangeCaret } = this.props;\n    if (input) {\n      const position = {\n        start: input.selectionStart,\n        end: input.selectionEnd,\n        direction: input.selectionDirection,\n      };\n      \n      // 前に取得したcaretとの比較\n      if (prevCaret === null || !this.compareCaret(prevCaret, position)) {\n        // 変化があれば親に通知\n        onChangeCaret(position);\n        this.setState({\n          prevCaret: { ...position },\n        });\n      }\n\n      input.focus();\n      return position;\n    }\n    return null;\n  };\n\n  /**\n   * カーソル位置を変更する\n   */\n  setCaret = (options = { start: 0, end: 0, direction: 'none' }) => {\n    const { start, end, direction } = options;\n    const { input } = this.state;\n    if (input) {\n      setTimeout(() => {\n        input.setSelectionRange(start, end, direction);\n        input.focus();\n      }, 50);\n    }\n  };\n\n  /**\n   * input要素を保持し、イベントを設定する\n   */\n  setInputRef = (input) => {\n    this.setState({\n      input,\n    });\n    ['select', 'focus', 'change', 'click', 'keyup'].forEach(\n      type => input.addEventListener(type, this.getCaret),\n    );\n  };\n\n  /**\n   * テキストのコピー\n   */\n  handleCopy = () => {\n    const { input } = this.state;\n    const { t } = this.props;\n    if (input) {\n      // 現在のカーソル位置\n      const caret = this.getCaret();\n      // 全体を選択してコピー\n      input.select();\n      document.execCommand('copy');\n      // 選択状態を復元\n      input.setSelectionRange(caret.start, caret.end, caret.direction);\n      input.focus();\n\n      this.setState({\n        message: t('message.copy'),\n      });\n      // 3秒後にメッセージ消去\n      setTimeout(this.clearMessage, 5000);\n    }\n  };\n\n  clearMessage = () => {\n    this.setState({\n      message: '',\n    });\n  };\n\n  handleClear = () => {\n    const { input } = this.state;\n    const { onChangeValue, onChangeCaret } = this.props;\n    if (input) {\n      onChangeValue('');\n      onChangeCaret({ start: 0, end: 0, direction: 'none' });\n      this.setCaret();\n    }\n  };\n\n  handleChange = (e) => {\n    const { onChangeValue } = this.props;\n    const value = e.target.value;\n    onChangeValue(value);\n  };\n\n  render() {\n    const { classes, value } = this.props;\n    const { message } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.content}>\n          <Input\n            classes={{\n              input: classes.textArea,\n            }}\n            value={value}\n            autoFocus\n            fullWidth\n            rows={3}\n            multiline\n            inputRef={this.setInputRef}\n            onChange={this.handleChange}\n          />\n          <FormHelperText>\n            {message}\n          </FormHelperText>\n        </FormControl>\n        <div className={classes.buttons}>\n          <IconButton\n            aria-label=\"Copy\"\n            onClick={this.handleCopy}\n          >\n            <CopyIcon fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"Clear\"\n            onClick={this.handleClear}\n          >\n            <ClearIcon fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nTextArea.defaultProps = {\n  value: '',\n  caret: {\n    start: 0,\n    end: 0,\n    direction: 'none',\n  },\n};\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  caret: PropTypes.shape(),\n  onChangeValue: PropTypes.func.isRequired,\n  onChangeCaret: PropTypes.func.isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // react-i18next\n  t: PropTypes.func.isRequired,\n};\n\nexport default withNamespaces()(withStyles(styles)(TextArea));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  // Button\n  key: {\n    fontSize: '28px',\n    minWidth: '40px',\n    minHeight: '20px',\n    margin: '3px',\n    padding: '2px',\n  },\n});\n\nclass Keybutton extends Component {\n  handleClick = () => {\n    const { code, onClick } = this.props;\n    onClick(this.getCharFromCode(code));\n  }\n\n  getCharFromCode = (code) => {\n    const params = code.filter(c => c !== 0).reverse();\n    return String.fromCharCode(...params);\n  };\n\n  render() {\n    const { code, color, classes } = this.props;\n    // TODO: 韓国語の場合のラベル表示を確認\n    const char = this.getCharFromCode(code);\n\n    return (\n      <Button\n        className={classes.key}\n        variant=\"outlined\"\n        value={char}\n        style={{ backgroundColor: color }}\n        onClick={this.handleClick}\n      >\n        {char}\n      </Button>\n    );\n  }\n}\n\nKeybutton.defaultProps = {\n  color: '#cccccc',\n};\n\nKeybutton.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  code: PropTypes.arrayOf(PropTypes.number).isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keybutton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Keybutton from './Keybutton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  function: {\n    margin: theme.spacing.unit,\n    width: 160,\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Keyboard extends Component {\n  state = {\n    keys: [],\n  };\n\n  componentWillMount() {\n    // keycode読み込み\n    const { keycode } = this.props;\n    this.fetchKeycode(keycode);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { keycode: current } = this.props;\n    const { keycode: next } = nextProps;\n\n    if (current !== next) {\n      this.fetchKeycode(next);\n    }\n  }\n\n  fetchKeycode = (keycode) => {\n    if (keycode) {\n      // JSONをfetchしてstateに保持\n      fetch(`./keycode/${keycode}`)\n        .then(res => res.json())\n        .then(data => this.setState({ keys: data }))\n        .catch(err => console.error(err));\n    }\n  }\n\n  handleSpaceKeyClick = () => {\n    const { onClick } = this.props;\n    onClick([0, 0, 0, 32]);\n  };\n\n  renderRow = (row, index) => {\n    const { classes } = this.props;\n    return (\n      <div\n        key={`row_${index}`}\n        className={classes.row}\n      >\n        {row.map(this.renderKey)}\n      </div>\n    );\n  };\n\n  renderKey = ({ code, color = '#cccccc', type = 'button', value = '' }, index) => {\n    const { onClick } = this.props;\n\n    if (type === 'hr') {\n      return (\n        <hr\n          key={`hr_${index}`}\n          style={{ width: '100%' }}\n        />\n      );\n    }\n    if (type === 'label') {\n      return (\n        <span key={`label_${index}`}>\n          {value}\n        </span>\n      );\n    }\n\n    return (\n      <Keybutton\n        key={`button_${code.join('')}_${index}`}\n        code={code}\n        color={color}\n        onClick={onClick}\n      />\n    );\n  };\n\n  render() {\n    const { classes, onBackspaceClick } = this.props;\n    const { keys } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.topRow}>\n          {/* Space */}\n          <Button\n            className={classes.function}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={this.handleSpaceKeyClick}\n          >\n            Space\n          </Button>\n          {/* Backspace */}\n          <Button\n            className={classes.function}\n            color=\"default\"\n            variant=\"outlined\"\n            onClick={onBackspaceClick}\n          >\n            <BackspaceIcon\n              fontSize=\"small\"\n              className={classes.icon}\n            />\n            Backspace\n          </Button>\n        </div>\n        {keys.map(this.renderRow)}\n      </div>\n    );\n  }\n}\n\nKeyboard.propTypes = {\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n  // component props\n  keycode: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onBackspaceClick: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Keyboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Header from '../components/Header';\nimport TextArea from '../components/TextArea';\nimport Keyboard from '../components/Keyboard';\nimport { languages } from '../commons';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    width: 'auto',\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n    overflow: 'auto',\n    [theme.breakpoints.up(700 + theme.spacing.unit * 2 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n});\n\nclass AppContainer extends Component {\n  state = {\n    value: '',\n    caret: {\n      start: 0,\n      end: 0,\n      direction: 'none',\n    },\n    keycode: '',\n  };\n\n  componentWillMount() {\n    const { match: { params: { lang } }, history } = this.props;\n    this.handleKeyboardLanguage(lang, history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { match: { params: { lang } }, history } = this.props;\n    const { match: { params: { lang: nextLang } } } = nextProps;\n\n    if (lang !== nextLang) {\n      this.handleKeyboardLanguage(nextLang, history);\n    }\n  }\n\n  handleKeyboardLanguage = (lang, history) => {\n    // 未定義の言語がURLに指定されていれば NoContent を表示\n    if (typeof languages[lang] === 'undefined') {\n      // Not Found\n      history.push('/nocontent');\n      return;\n    }\n\n    this.setState({\n      keycode: languages[lang].keycode,\n    });\n  };\n\n  handleChangeValue = (value) => {\n    this.setState({\n      value,\n    });\n  };\n\n  handleChangeCaret = (caret) => {\n    this.setState({\n      caret: { ...caret },\n    });\n  };\n\n  insert = (char) => {\n    const { value, caret } = this.state;\n    const newCaret = {};\n\n    if (value === '') {\n      this.setState({\n        value: char,\n        caret: {\n          start: char.length,\n          end: char.length,\n          direction: 'none',\n        },\n      });\n      return;\n    }\n\n    const before = value.slice(0, caret.start);\n    const after = value.slice(caret.end);\n    newCaret.start = caret.start + char.length;\n    newCaret.end = caret.start + char.length;\n    newCaret.direction = 'none';\n\n    this.setState({\n      value: `${before}${char}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  handleKeyboardClick = (char) => {\n    this.insert(char);\n  };\n\n  handleKeyboardBackspaceClick = () => {\n    const { value, caret } = this.state;\n    if (value === '') {\n      // 値が空なら何もしない\n      return;\n    }\n\n    if (caret.start === 0 && caret.end === 0) {\n      // 先頭なら何もしない\n      return;\n    }\n\n    let before = '';\n    let after = '';\n    const newCaret = {};\n    if (caret.start === caret.end) {\n      // 未選択の場合はcaretの前1文字を削除\n      before = value.slice(0, caret.start - 1);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start - 1;\n      newCaret.end = caret.start - 1;\n      newCaret.direction = 'none';\n    } else {\n      // 選択範囲を削除\n      before = value.slice(0, caret.start);\n      after = value.slice(caret.end);\n      newCaret.start = caret.start;\n      newCaret.end = caret.start;\n      newCaret.direction = 'none';\n    }\n\n    // stateの更新\n    this.setState({\n      value: `${before}${after}`,\n      caret: newCaret,\n    });\n  };\n\n  render() {\n    const { match: { params: { lang } }, classes } = this.props;\n    const { value, caret, keycode } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Header language={lang} />\n          <div className={classes.container}>\n            <div className={classes.appBarSpacer} />\n            <TextArea\n              value={value}\n              caret={caret}\n              onChangeValue={this.handleChangeValue}\n              onChangeCaret={this.handleChangeCaret}\n            />\n            <Keyboard\n              keycode={keycode}\n              onClick={this.handleKeyboardClick}\n              onBackspaceClick={this.handleKeyboardBackspaceClick}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAppContainer.propTypes = {\n  // react-router-dom\n  match: PropTypes.shape().isRequired,\n  history: PropTypes.shape().isRequired,\n  // material-ui\n  classes: PropTypes.shape().isRequired,\n};\n\nexport default withRouter(withStyles(styles)(AppContainer));\n","import React from 'react';\n\nconst NoContent = () => (\n  <div>\n    <h1>No Content.</h1>\n  </div>\n);\n\nexport default NoContent;\n ","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport AppContainer from './containers/AppContainer';\nimport NoContent from './NoContent';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => (<Redirect to={{ pathname: '/thai' }} />)} />\n        <Route path=\"/:lang\" component={AppContainer} />\n        <Route exact path=\"/nocontent\" component={NoContent} />\n      </Switch>\n    </Router>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import i18next from 'i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { reactI18nextModule } from 'react-i18next';\n\nimport langEn from './locales/en';\nimport langJa from './locales/ja';\n\nexport default i18next\n  .use(languageDetector)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: 'ja',\n    resources: {\n      en: {\n        translation: langEn,\n      },\n      ja: {\n        translation: langJa,\n      },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\n\nimport './index.css';\nimport App from './App';\nimport i18n from './commons/i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <App />\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}